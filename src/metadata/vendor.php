<?php
return array (
    'package' => 'Trello',
    'tagline' => 'Get data and update tasks on this project management app.',
    'description' => 'Connect to the Trello Project Management API to get data and update tasks on this project management app. Test an API call and export the code into your app.',
    'image' => 'https://logo.clearbit.com/trello.com?s=128',
    'repo' => 'https://github.com/RapidSoftwareSolutions/Marketplace-Trello-Package',
    'keywords' => array (
        'API', 'business', 'data', 'enterprise', 'listing', 'management', 'project', 'task',
    ),
    'accounts' => array (
        'domain' => 'trello.com',
        'credentials' => array (
            'apiKeys',
        ),
    ),
    'blocks' => array (
        array (
            'name' => 'getToken',
            'description' => 'Find a token by identifier.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields for fetching. One of: all, dateCreated, dateExpires, idMember, identifier, permissions.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteToken',
            'description' => 'Remove a token.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getTokenMember',
            'description' => 'Get a given token member.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields for fetching. One of: all, avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getTokenWebhooks',
            'description' => 'Get a given token webhooks.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getTokenSingleWebhook',
            'description' => 'Get a given token single webhook by identifier.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idWebhook',
                    'type' => 'String',
                    'info' => 'The identifier of the webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createTokenWebhook',
            'description' => 'Create a given token webhook.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'callbackURL',
                    'type' => 'String',
                    'info' => 'A valid URL that is reachable with a HEAD request.',
                    'required' => true,
                ),
                array (
                    'name' => 'idModel',
                    'type' => 'String',
                    'info' => 'Identifier of the model to be monitored.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Description of webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateTokenWebhook',
            'description' => 'Update a given token webhook.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'callbackURL',
                    'type' => 'String',
                    'info' => 'A valid URL that is reachable with a HEAD request.',
                    'required' => true,
                ),
                array (
                    'name' => 'idModel',
                    'type' => 'String',
                    'info' => 'Identifier of the model to be monitored.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Description of webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'removeTokenWebhook',
            'description' => 'Remove a given token single webhook by identifier.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tokenId',
                    'type' => 'String',
                    'info' => 'The token\'s identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idWebhook',
                    'type' => 'String',
                    'info' => 'The identifier of the webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getWebhook',
            'description' => 'Get single webhook by identifier.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idWebhook',
                    'type' => 'String',
                    'info' => 'The identifier of the webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createWebhook',
            'description' => 'Create a webhook.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'callbackURL',
                    'type' => 'String',
                    'info' => 'A valid URL that is reachable with a HEAD request.',
                    'required' => true,
                ),
                array (
                    'name' => 'idModel',
                    'type' => 'String',
                    'info' => 'Identifier of the model to be monitored.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Description of webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateWebhook',
            'description' => 'Update a webhook.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idWebhook',
                    'type' => 'String',
                    'info' => 'The identifier of the webhook.',
                    'required' => true,
                ),
                array (
                    'name' => 'callbackURL',
                    'type' => 'String',
                    'info' => 'A valid URL that is reachable with a HEAD request.',
                    'required' => true,
                ),
                array (
                    'name' => 'idModel',
                    'type' => 'String',
                    'info' => 'Identifier of the model to be monitored.',
                    'required' => true,
                ),
                array (
                    'name' => 'description',
                    'type' => 'String',
                    'info' => 'Description of webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteWebhook',
            'description' => 'Delete a webhook.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idWebhook',
                    'type' => 'String',
                    'info' => 'The identifier of the webhook.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getType',
            'description' => 'Get type of team or user.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'teamOrUserId',
                    'type' => 'String',
                    'info' => 'Team or user identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getBoard',
            'description' => 'Get board by identifier.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Display actions. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsFormat',
                    'type' => 'String',
                    'info' => 'One of actions format. One of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsSince',
                    'type' => 'String',
                    'info' => 'One of actions since. One of: date, null, lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit. One of: number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionMember',
                    'type' => 'Boolean',
                    'info' => 'Action member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionMemberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionMemberCreator',
                    'type' => 'Boolean',
                    'info' => 'Action member creator. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionMemberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'Type of cards. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardAttachments',
                    'type' => 'String',
                    'info' => 'Type of card attachments. One of: false, cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardAttachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardChecklists',
                    'type' => 'String',
                    'info' => 'Card checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardPluginData',
                    'type' => 'Boolean',
                    'info' => 'Card pluginData. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardStickers',
                    'type' => 'Boolean',
                    'info' => 'Card stickers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardStars',
                    'type' => 'String',
                    'info' => 'Type of board stars. One of: mine, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'labels',
                    'type' => 'String',
                    'info' => 'Type of labels. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of label fields. One of: color, idBoard, name, uses.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelsLimit',
                    'type' => 'String',
                    'info' => 'Labels limit. One of: number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'lists',
                    'type' => 'String',
                    'info' => 'Type of lists. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'listFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of list fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberships',
                    'type' => 'String',
                    'info' => 'Comma-separated list of memberships. One of: none, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'membershipsMember',
                    'type' => 'Boolean',
                    'info' => 'Memberships member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'membershipsMemberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of memberships member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'String',
                    'info' => 'Type of members. One of: admins, all, none, normal, owners.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'membersInvited',
                    'type' => 'String',
                    'info' => 'Type of members invited. One of: admins, all, none, normal, owners.',
                    'required' => false,
                ),
                array (
                    'name' => 'membersInvitedFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of members invited fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'pluginData',
                    'type' => 'Boolean',
                    'info' => 'Plugin data. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Type of checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklistFields',
                    'type' => 'String',
                    'info' => 'Type of checklist fields. One of: idBoard, idCard, name, pos.',
                    'required' => false,
                ),
                array (
                    'name' => 'organization',
                    'type' => 'Boolean',
                    'info' => 'Organization. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization fields. One of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationMemberships',
                    'type' => 'String',
                    'info' => 'Type of organization memberships. One of: none, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationPluginData',
                    'type' => 'String',
                    'info' => 'Organization plugin data. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'myPrefs',
                    'type' => 'Boolean',
                    'info' => 'My prefs. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'tags',
                    'type' => 'Boolean',
                    'info' => 'Tags. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardActions',
            'description' => 'Get single board actions.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Display actions. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions type. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'format',
                    'type' => 'String',
                    'info' => 'One of actions format. One of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'One of actions since. One of: date, null, lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'One of actions before, date or null.',
                    'required' => false,
                ),
                array (
                    'name' => 'page',
                    'type' => 'String',
                    'info' => 'Actions page. Page limit must be less than 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'idModels',
                    'type' => 'String',
                    'info' => 'Actions identifier models. Return actions related to these model identifiers.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Actions limit. One of: number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Action member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'Boolean',
                    'info' => 'Action member creator. One of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardStars',
            'description' => 'Get single board stars.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of board stars. One of: mine, none.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardCards',
            'description' => 'Get single board cards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of cards. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Type of card attachments. One of: false, cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Card checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'stickers',
                    'type' => 'Boolean',
                    'info' => 'Card stickers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'String',
                    'info' => 'Card members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'Boolean',
                    'info' => 'Check item states. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit, a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since, a date, or null.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before, a date, or null.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardSingleCard',
            'description' => 'Get single cards of single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCard',
                    'type' => 'String',
                    'info' => 'The card identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Type of card attachments. One of: false, cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Display actions. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit. One of: number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionMemberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Card members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'Boolean',
                    'info' => 'Check item states. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStateFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of check item states fields. One of: all, idCheckItem, state.',
                    'required' => false,
                ),
                array (
                    'name' => 'labels',
                    'type' => 'Boolean',
                    'info' => 'Labels. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Type of checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklistFields',
                    'type' => 'String',
                    'info' => 'Type of checklist fields. One of: idBoard, idCard, name, pos.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardChecklists',
            'description' => 'Get single board checklists.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'List of cards type. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItems',
                    'type' => 'String',
                    'info' => 'Check items. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of check item fields. One of: name, nameData, pos, state, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter, one of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, idBoard, idCard, name, pos.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardDeltas',
            'description' => 'Get single board deltas.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'tags',
                    'type' => 'String',
                    'info' => 'A valid tag for subscribing.',
                    'required' => true,
                ),
                array (
                    'name' => 'ixLastUpdate',
                    'type' => 'String',
                    'info' => 'IX last update a number, from -1 to Infinity.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getBoardLabels',
            'description' => 'Get single board labels.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, color, idBoard, name, uses.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit, a number from 0 to 1000.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardSingleLabel',
            'description' => 'Get single labels of single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idLabel',
                    'type' => 'String',
                    'info' => 'The identifier of the label.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, color, idBoard, name, uses.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardLists',
            'description' => 'Get single board lists.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'Type of cards. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter by type of lists. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardMembers',
            'description' => 'Get single board members.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter by type of lists. One of: admins, all, none, normal, owners.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'activity',
                    'type' => 'Boolean',
                    'info' => 'Activity. One of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getSingleBoardMemberCards',
            'description' => 'Get single members cards of single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'An identifier, username, or organization name of member.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Type of card attachments. One of: false, cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Card members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'Boolean',
                    'info' => 'Check item states. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Type of checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'board',
                    'type' => 'Boolean',
                    'info' => 'Board, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'list',
                    'type' => 'Boolean',
                    'info' => 'List, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'listFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of list fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMembersInvitedToBoard',
            'description' => 'Get members invited to single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardMemberships',
            'description' => 'Get single board memberships.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: none, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Memberships member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardSingleMembership',
            'description' => 'Get single memberships of single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMembership',
                    'type' => 'String',
                    'info' => 'A membership document identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Memberships member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoardPreferences',
            'description' => 'Get single board preferences.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getBoardOrganization',
            'description' => 'Get single board organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateBoard',
            'description' => 'Update single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Board name, a string with a length from 1 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'desc',
                    'type' => 'String',
                    'info' => 'Board description, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'closed',
                    'type' => 'Boolean',
                    'info' => 'Is closed. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'subscribed',
                    'type' => 'Boolean',
                    'info' => 'Is subscribed. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'idOrganization',
                    'type' => 'String',
                    'info' => 'Identifier of organization. A string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsPermissionLevel',
                    'type' => 'String',
                    'info' => 'Board preference permission level. One of: org, private, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsSelfJoin',
                    'type' => 'Boolean',
                    'info' => 'Board preference self join. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsCardCovers',
                    'type' => 'Boolean',
                    'info' => 'Board preference card covers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsInvitations',
                    'type' => 'String',
                    'info' => 'Board preference invitations. One of: admins, members.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsVoting',
                    'type' => 'String',
                    'info' => 'Board preference voting. One of: disabled, members, observers, org, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsComments',
                    'type' => 'String',
                    'info' => 'Board preference comments. One of: disabled, members, observers, org, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsBackground',
                    'type' => 'String',
                    'info' => 'Board preferences background. One of: A standard background name, or the identifier of a custom background.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsCardAging',
                    'type' => 'String',
                    'info' => 'Board preferences card aging. One of: pirate, regular.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsCalendarFeedEnabled',
                    'type' => 'Boolean',
                    'info' => 'Board preferences calendar feed enabled. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelNamesGreen',
                    'type' => 'String',
                    'info' => 'Green label name. One of: A string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelNamesYellow',
                    'type' => 'String',
                    'info' => 'Yellow label name. One of: A string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelNamesOrange',
                    'type' => 'String',
                    'info' => 'Orange label name. One of: A string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelNamesRed',
                    'type' => 'String',
                    'info' => 'Red label name. One of: A string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelNamesPurple',
                    'type' => 'String',
                    'info' => 'Purple label name. One of: A string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'labelNamesBlue',
                    'type' => 'String',
                    'info' => 'Blue label name. One of: A string with a length from 0 to 16384.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardCloseState',
            'description' => 'Update single board close state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Is closed. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardDescription',
            'description' => 'Update single board description.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Description value. a string with a length from 0 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardOrganization',
            'description' => 'Update single board organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'New organization identifier. a string with a length from 0 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardSingleLabel',
            'description' => 'Update single label of single board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'labelColor',
                    'type' => 'String',
                    'info' => 'Label color name. One of: blue, green, orange, purple, red, yellow.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Label value, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addMemberToBoard',
            'description' => 'Add single member to board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'An email address of new member.',
                    'required' => true,
                ),
                array (
                    'name' => 'fullName',
                    'type' => 'String',
                    'info' => 'Full name of new member. Cannot begin or end with a space.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Type of new member. One of: admin, normal, observer.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'setMemberRoleOnBoard',
            'description' => 'Update board single member role.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'An identifier, username, or organization name.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Type of new member. One of: admin, normal, observer.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardMembership',
            'description' => 'Update board single membership.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMembership',
                    'type' => 'String',
                    'info' => 'An identifier of membership.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Type of new member. One of: admin, normal, observer.',
                    'required' => true,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'setBoardName',
            'description' => 'Update board name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board new name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardSubscriptionState',
            'description' => 'Update board subscription state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board subscription state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateEmailPosition',
            'description' => 'Update board email position.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board email position. One of: bottom, top.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateEmailList',
            'description' => 'Update board email list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board email list identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setShowListGuideState',
            'description' => 'Update board show list guide state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board show list guide state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateShowSidebarState',
            'description' => 'Update board show sidebar state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board show sidebar state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateShowSidebarActivityState',
            'description' => 'Update board show sidebar activity state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board show sidebar activity state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateShowSidebarBoardActionsState',
            'description' => 'Update board show sidebar board actions state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board show sidebar board actions state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateShowSidebarMembersState',
            'description' => 'Update board show sidebar members state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board show sidebar members state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardBackground',
            'description' => 'Update board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board background. A standard background name, or the identifier of a custom background.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCalendarFeedEnableState',
            'description' => 'Update board calendar feed enable state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board calendar feed enable state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardCardAgingPrefs',
            'description' => 'Update board card aging preferences.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board card aging preferences. One of: pirate, regular.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardCardCoversState',
            'description' => 'Update board card covers state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board card covers state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardCommentsPrefs',
            'description' => 'Update board comments preferences.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board comments preferences. One of: disabled, members, observers, org, public.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardInvitationsPrefs',
            'description' => 'Update board invitations preferences.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board invitations preferences. One of: admins, members.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardPermissionLevel',
            'description' => 'Update board permission level.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board permission level. One of: org, private, public.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardSelfJoinState',
            'description' => 'Update board self join state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Board self join state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateBoardVotingPrefs',
            'description' => 'Update board voting preferences.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Board voting preferences. One of: disabled, members, observers, org, public.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createBoard',
            'description' => 'Update board voting preferences.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Board name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'defaultLabels',
                    'type' => 'Boolean',
                    'info' => 'Default labels. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'defaultLists',
                    'type' => 'Boolean',
                    'info' => 'Default lists. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'desc',
                    'type' => 'String',
                    'info' => 'Description, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'idOrganization',
                    'type' => 'String',
                    'info' => 'The identifier or name of the organization to add the board to.',
                    'required' => false,
                ),
                array (
                    'name' => 'idBoardSource',
                    'type' => 'String',
                    'info' => 'The identifier of the board to copy into the new board.',
                    'required' => false,
                ),
                array (
                    'name' => 'keepFromSource',
                    'type' => 'String',
                    'info' => 'Keep from source, all or components of the source board to copy.',
                    'required' => false,
                ),
                array (
                    'name' => 'powerUps',
                    'type' => 'String',
                    'info' => 'PowerUps. One of: all, calendar, cardAging, recap, voting.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsPermissionLevel',
                    'type' => 'String',
                    'info' => 'Preferences permission level. One of: org, private, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsVoting',
                    'type' => 'String',
                    'info' => 'Preferences voting. One of: disabled, members, observers, org, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsComments',
                    'type' => 'String',
                    'info' => 'Preferences comments. One of: disabled, members, observers, org, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsInvitations',
                    'type' => 'String',
                    'info' => 'Preferences invitations. One of: admins, members.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsSelfJoin',
                    'type' => 'Boolean',
                    'info' => 'Preferences self join. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsCardCovers',
                    'type' => 'Boolean',
                    'info' => 'Preferences card covers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsBackground',
                    'type' => 'String',
                    'info' => 'Preferences background, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefsCardAging',
                    'type' => 'String',
                    'info' => 'Preferences card aging. One of: pirate, regular.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createBoardCalendarKey',
            'description' => 'Create board calendar key.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addChecklistToBoard',
            'description' => 'Add checklist to board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Checklists name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createBoardEmailKey',
            'description' => 'Create board email key.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createBoardLabels',
            'description' => 'Create board labels.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Board labels name, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'color',
                    'type' => 'String',
                    'info' => 'Label color or null. Valid value: blue, green, orange, purple, red, yellow.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createBoardList',
            'description' => 'Create board list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Board lists name, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'markBoardViewed',
            'description' => 'Mark board as viewed.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createBoardPowerUps',
            'description' => 'Create board power Ups.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Power Ups value. One of: calendar, cardAging, recap, voting.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberFromBoard',
            'description' => 'Delete member from board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'An identifier, username, or organization name of member.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteBoardPowerUp',
            'description' => 'Delete board power up.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'boardId',
                    'type' => 'String',
                    'info' => 'The board identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'powerUp',
                    'type' => 'String',
                    'info' => 'Board power up. One of: calendar, cardAging, recap, voting.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleCard',
            'description' => 'Get a single card by id or shortlink.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Actions display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionMemberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Attachments, one of: true, false, cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'membersVoted',
                    'type' => 'Boolean',
                    'info' => 'Members voted. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberVotedFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member voted fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'Boolean',
                    'info' => 'Check item states. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStateFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of check item state fields. One of: all, idCheckItem, state.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklistFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of checklist fields. One of: all, idBoard, idCard, name, pos.',
                    'required' => false,
                ),
                array (
                    'name' => 'board',
                    'type' => 'Boolean',
                    'info' => 'Board. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'list',
                    'type' => 'Boolean',
                    'info' => 'List. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'listFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of list fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
                array (
                    'name' => 'pluginData',
                    'type' => 'Boolean',
                    'info' => 'Plugin data. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'stickers',
                    'type' => 'Boolean',
                    'info' => 'Stickers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'stickerFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of sticker fields. One of: all, image, imageScaled, imageUrl, left, rotate, top, zIndex.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, dueComplete, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardActions',
            'description' => 'Get a single card actions.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Actions display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Actions limit, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'format',
                    'type' => 'String',
                    'info' => 'Format, one of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since, a date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before, a date, or null.',
                    'required' => false,
                ),
                array (
                    'name' => 'idModels',
                    'type' => 'String',
                    'info' => 'Return actions related to these model ids.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'Boolean',
                    'info' => 'Member creator. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardAttachments',
            'description' => 'Get a single card attachments.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Attachments filter, one of: true, false, cover.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardSingleAttachment',
            'description' => 'Get a single attachments of single card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idAttachment',
                    'type' => 'String',
                    'info' => 'The id of the attachment.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardBoard',
            'description' => 'Get a single attachments of single card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardChecklistItemStates',
            'description' => 'Get a single card checklist item states.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, idCheckItem, state.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardChecklists',
            'description' => 'Get a single card checklists.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'Cards, one of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, dueComplete, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItems',
                    'type' => 'String',
                    'info' => 'Check items. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemFields',
                    'type' => 'String',
                    'info' => 'Check item fields. One of: name, nameData, pos, state, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, idBoard, idCard, name, pos.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardSingleCheckItem',
            'description' => 'Get a single check item of single card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'Id of the checkitem to retrieve.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Check item fields. One of: all, name, nameData, pos, state, type.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardList',
            'description' => 'Get a single card list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Card list fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardMembers',
            'description' => 'Get a single card members.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Card list fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberVoteToCard',
            'description' => 'Get a member vote of a single card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Card list fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardStickers',
            'description' => 'Get a single card stickers.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Card sticker fields. One of: all, image, imageScaled, imageUrl, left, rotate, top, zIndex.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCardSingleSticker',
            'description' => 'Get a single sticker of a single card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idSticker',
                    'type' => 'String',
                    'info' => 'Card sticker id.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Card sticker fields. One of: all, image, imageScaled, imageUrl, left, rotate, top, zIndex.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateSingleCard',
            'description' => 'Update a single card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name of single card, a string with a length from 1 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'desc',
                    'type' => 'String',
                    'info' => 'Description of single card, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'closed',
                    'type' => 'Boolean',
                    'info' => 'Is closed. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'idMembers',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'idAttachmentCover',
                    'type' => 'String',
                    'info' => 'Id of the image attachment of this card to use as its cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'Id of the list the card should be moved to.',
                    'required' => false,
                ),
                array (
                    'name' => 'idLabels',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'Id of the board the card should be moved to.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
                array (
                    'name' => 'due',
                    'type' => 'String',
                    'info' => 'Due a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'dueComplete',
                    'type' => 'Boolean',
                    'info' => 'Is due complete. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'subscribed',
                    'type' => 'Boolean',
                    'info' => 'Is subscribed. One of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateCardCheckItemName',
            'description' => 'Update a single card check item name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The id of the checkitem to modify.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Check item name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardCheckItemPos',
            'description' => 'Update a single card check item position.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The id of the checkitem to modify.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Check item position. One of: top, bottom, or a positive number.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardCheckItemState',
            'description' => 'Update a single card check item state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The id of the checkitem to modify.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Check item state. One of: complete, incomplete, true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardCheckItem',
            'description' => 'Update a single card check item.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The id of the checkitem to modify.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Check item name, a string with a length from 1 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'state',
                    'type' => 'String',
                    'info' => 'Check item state. One of: complete, incomplete, true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'Check item checklist id.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'Check item position. One of: top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateCardCloseState',
            'description' => 'Update a single card close state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Card close state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardDescription',
            'description' => 'Update a single card description.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Card description, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardDueDate',
            'description' => 'Update a single card due date.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Card due date.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardDueComplete',
            'description' => 'Update a single card due complete.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Card due complete. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setAttachmentAsCoverOfCard',
            'description' => 'Set attachment as cover of card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Id of the image attachment of this card to use as its cover.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setCardBoard',
            'description' => 'Set card board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Id of the board the card should be moved to.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'id of the list that the card should be moved to on the new board.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'setCardList',
            'description' => 'Set card list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Id of the list the card should be moved to.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'setCardMembers',
            'description' => 'Set card members.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardName',
            'description' => 'Update card name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Card name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardPosition',
            'description' => 'Update card position.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateCardSingleSticker',
            'description' => 'Update card single sticker.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idSticker',
                    'type' => 'String',
                    'info' => 'The id of the sticker to modify.',
                    'required' => true,
                ),
                array (
                    'name' => 'top',
                    'type' => 'String',
                    'info' => 'Distance from top.',
                    'required' => false,
                ),
                array (
                    'name' => 'left',
                    'type' => 'String',
                    'info' => 'Distance from left.',
                    'required' => false,
                ),
                array (
                    'name' => 'zIndex',
                    'type' => 'Number',
                    'info' => 'Valid Z values for stickers, must be an integer.',
                    'required' => false,
                ),
                array (
                    'name' => 'rotate',
                    'type' => 'Number',
                    'info' => 'Rotation angle.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateCardSubscriptionState',
            'description' => 'Update single card subscription state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Card subscription state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createCard',
            'description' => 'Create new card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'Id of the list that the card should be added to.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the new card.',
                    'required' => true,
                ),
                array (
                    'name' => 'desc',
                    'type' => 'String',
                    'info' => 'New card description, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'New card position. top, bottom, or a positive number.',
                    'required' => false,
                ),
                array (
                    'name' => 'due',
                    'type' => 'String',
                    'info' => 'Due date.',
                    'required' => false,
                ),
                array (
                    'name' => 'dueComplete',
                    'type' => 'Boolean',
                    'info' => 'Due complete. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'idMembers',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'idLabels',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'urlSource',
                    'type' => 'String',
                    'info' => 'New card url source. A URL starting with http:// or https://.',
                    'required' => false,
                ),
                array (
                    'name' => 'fileSource',
                    'type' => 'File',
                    'info' => 'New card file source.',
                    'required' => false,
                ),
                array (
                    'name' => 'idCardSource',
                    'type' => 'String',
                    'info' => 'The id of the card to copy into a new card.',
                    'required' => false,
                ),
                array (
                    'name' => 'keepFromSource',
                    'type' => 'String',
                    'info' => 'Comma-separated list of keep from source. One of: all, attachments, checklists, comments, due, labels, members, stickers.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addCommentToCard',
            'description' => 'Add new comment to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'text',
                    'type' => 'String',
                    'info' => 'Text of comment, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addAttachmentToCard',
            'description' => 'Add attachment to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'url',
                    'type' => 'String',
                    'info' => 'File url to add. A URL starting with http:// or https://.',
                    'required' => false,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'File to add.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name of attachment, a string with a length from 0 to 256.',
                    'required' => false,
                ),
                array (
                    'name' => 'mimeType',
                    'type' => 'String',
                    'info' => 'Mime type of attachment, a string with a length from 0 to 256.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createCardCheckItem',
            'description' => 'Create card check item.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New check item name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'New check item position. One of: top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'convertCardCheckItemToCard',
            'description' => 'Convert card checkItem to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The id of the checkitem to modify.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addChecklistToCard',
            'description' => 'Add checklist to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'The id of the checklist to add to the card, or null to create a new one.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'idChecklistSource',
                    'type' => 'String',
                    'info' => 'The id of the source checklist to copy into a new checklist.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'addCardLabel',
            'description' => 'Add label to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'The id of the label to add.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addMemberToCard',
            'description' => 'Add member to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'The id of the member to add to the card.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createCardLabels',
            'description' => 'Create card labels.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'color',
                    'type' => 'String',
                    'info' => 'Label color name. One of: blue, green, orange, purple, red, yellow.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Label name, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'markCardAssociatedNotificationsRead',
            'description' => 'Mark card associated notifications as read.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'addMemberVoteToCard',
            'description' => 'Add member vote to card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'The id of the member to vote \'yes\' on the card.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createCardSticker',
            'description' => 'Create card sticker.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'image',
                    'type' => 'String',
                    'info' => 'Sticker image, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'top',
                    'type' => 'String',
                    'info' => 'Distance from top.',
                    'required' => true,
                ),
                array (
                    'name' => 'left',
                    'type' => 'String',
                    'info' => 'Distance from left.',
                    'required' => true,
                ),
                array (
                    'name' => 'zIndex',
                    'type' => 'Number',
                    'info' => 'Valid Z values for stickers, must be an integer.',
                    'required' => true,
                ),
                array (
                    'name' => 'rotate',
                    'type' => 'Number',
                    'info' => 'Rotation angle.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteCard',
            'description' => 'Delete card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteAttachmentFromCard',
            'description' => 'Delete attachment from card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idAttachment',
                    'type' => 'String',
                    'info' => 'The id of the attachment to remove from the card.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteCardCheckItem',
            'description' => 'Delete card check item.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The id of the check item to remove.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteCardCheckList',
            'description' => 'Delete card check list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The id of the checklist to remove from the card.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteLabelFromCard',
            'description' => 'Delete label from card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idLabel',
                    'type' => 'String',
                    'info' => 'The id of the label to delete.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberFromCard',
            'description' => 'Delete member from card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'The id of the member to remove from the card.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberVoteFromCard',
            'description' => 'Delete member vote from card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'The id of the member whose vote to rescind.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteSingleStickerFromCard',
            'description' => 'Delete single sticker from card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'cardIdOrShortlink',
                    'type' => 'String',
                    'info' => 'Card id or shortlink.',
                    'required' => true,
                ),
                array (
                    'name' => 'idSticker',
                    'type' => 'String',
                    'info' => 'The id of the sticker to remove.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getChecklist',
            'description' => 'Get single checklist.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'Cards type. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItems',
                    'type' => 'String',
                    'info' => 'Check items. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of check item fields. One of: all, name, nameData, pos, state, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, idBoard, idCard, name, pos.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getChecklistBoard',
            'description' => 'Get checklist board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getChecklistCards',
            'description' => 'Get checklist cards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Attachments. One of: A true, false or cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'stickers',
                    'type' => 'Boolean',
                    'info' => 'Show stickers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Show members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'String',
                    'info' => 'Check item states. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'Boolean',
                    'info' => 'Checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit to show, a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since to show, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before to show, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type filter. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getChecklistItems',
            'description' => 'Get checklist items.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, name, nameData, pos, state, type.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateChecklist',
            'description' => 'Update checklist.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New name, a string with a length from 1 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateChecklistName',
            'description' => 'Update checklist name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'New name value, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateChecklistPosition',
            'description' => 'Update checklist position.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createChecklist',
            'description' => 'Create new checklist.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCard',
                    'type' => 'String',
                    'info' => 'Identifier of the card that the checklist should be added to.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Checklist name, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
                array (
                    'name' => 'idChecklistSource',
                    'type' => 'String',
                    'info' => 'The identifier of the source checklist to copy into a new checklist.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createItemInChecklist',
            'description' => 'Create new item in checklist.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Checklist item name, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
                array (
                    'name' => 'checked',
                    'type' => 'Boolean',
                    'info' => 'Is checked. One of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'deleteChecklist',
            'description' => 'Delete checklist.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteItemFromChecklist',
            'description' => 'Delete checklist item from checklist.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idChecklist',
                    'type' => 'String',
                    'info' => 'The identifier of the checklist.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCheckItem',
                    'type' => 'String',
                    'info' => 'The identifier of the check item to remove.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getList',
            'description' => 'Get single list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'Type of cards. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'board',
                    'type' => 'Boolean',
                    'info' => 'Board. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getListActions',
            'description' => 'Get single list actions.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, commentCard, convertToCardFromCheckItem, copyCard, emailCard, createCard, createList, deleteCard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateList, updateList:closed, updateList:name.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'format',
                    'type' => 'String',
                    'info' => 'Format to show. One of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'idModels',
                    'type' => 'String',
                    'info' => 'Only return actions related to these model identifiers.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'String',
                    'info' => 'Ьember сreator. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member сreator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before to show, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'page',
                    'type' => 'String',
                    'info' => 'Page limit must be less than 1000.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getListBoard',
            'description' => 'Get single list boards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getListCards',
            'description' => 'Get single list cards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'A boolean value or cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'stickers',
                    'type' => 'Boolean',
                    'info' => 'Stickers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'String',
                    'info' => 'Check item states. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Checklists. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before to show, a date.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateList',
            'description' => 'Update single list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name of list, a string with a length from 1 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'closed',
                    'type' => 'String',
                    'info' => 'Is closed. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'Identifier of the board the list should be moved to.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
                array (
                    'name' => 'subscribed',
                    'type' => 'String',
                    'info' => 'Is subscribed. One of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateListCloseState',
            'description' => 'Update list close state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Close state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateListBoard',
            'description' => 'Move single list to other board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Identifier of the board the list should be moved to.',
                    'required' => true,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'Position of the list on the new board. One of: top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateListName',
            'description' => 'Update single list name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'List new name, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateListPosition',
            'description' => 'Update single list position.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateListSubscriptionState',
            'description' => 'Update single list subscription state.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Subscription state. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createList',
            'description' => 'Create  new list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Name of new list, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'Identifier of the board that the list should be added to.',
                    'required' => true,
                ),
                array (
                    'name' => 'idListSource',
                    'type' => 'String',
                    'info' => 'The identifier of the list to copy into a new list.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'A position. top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'archiveAllListCards',
            'description' => 'Move to archive all list cards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'moveAllListCards',
            'description' => 'Move all list cards ot new list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idList',
                    'type' => 'String',
                    'info' => 'The identifier of the list.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'Identifier of the board that the cards should be moved to.',
                    'required' => true,
                ),
                array (
                    'name' => 'newListId',
                    'type' => 'String',
                    'info' => 'Identifier of the list that the cards should be moved to.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getLabel',
            'description' => 'Move single label.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idLabel',
                    'type' => 'String',
                    'info' => 'The identifier of the label.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, color, idBoard, name, uses.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getLabelBoards',
            'description' => 'Move single label boards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idLabel',
                    'type' => 'String',
                    'info' => 'The identifier of the label.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateLabel',
            'description' => 'Update single label.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idLabel',
                    'type' => 'String',
                    'info' => 'The identifier of the label.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Label name, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'color',
                    'type' => 'String',
                    'info' => 'Label color, a valid label color.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createLabel',
            'description' => 'Create new label.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'Label border identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New label name, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'color',
                    'type' => 'String',
                    'info' => 'New label color, a valid label color.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteLabel',
            'description' => 'Delete single label.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idLabel',
                    'type' => 'String',
                    'info' => 'The identifier of the label.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getMember',
            'description' => 'Get single member.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Actions display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionSince',
                    'type' => 'String',
                    'info' => 'Action since, a date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionBefore',
                    'type' => 'String',
                    'info' => 'Action before, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'cards',
                    'type' => 'String',
                    'info' => 'Tpye of cards. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardMembers',
                    'type' => 'Boolean',
                    'info' => 'Card members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardMemberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardAttachments',
                    'type' => 'String',
                    'info' => 'Card attachments. One of: boolean value or cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardAttachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card attachment fields. One of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardStickers',
                    'type' => 'Boolean',
                    'info' => 'Card stickers. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boards',
                    'type' => 'String',
                    'info' => 'Type of boards. One of: all, closed, members, open, organization, pinned, public, starred, unpinned.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Board actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Board actions display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsFormat',
                    'type' => 'String',
                    'info' => 'Type of board actions format. One of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsSince',
                    'type' => 'String',
                    'info' => 'Board actions since, a date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsLimit',
                    'type' => 'String',
                    'info' => 'Board actions limit, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardLists',
                    'type' => 'String',
                    'info' => 'Type of board lists. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardMemberships',
                    'type' => 'String',
                    'info' => 'Type of board memberships. One of: active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardOrganization',
                    'type' => 'Boolean',
                    'info' => 'Board organization. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardOrganizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board organization fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardsInvited',
                    'type' => 'String',
                    'info' => 'Type of boards invited. One of: all, closed, members, open, organization, pinned, public, starred, unpinned.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardsInvitedFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of boards invited fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardStars',
                    'type' => 'Boolean',
                    'info' => 'Board stars. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'savedSearches',
                    'type' => 'Boolean',
                    'info' => 'Saved searches. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizations',
                    'type' => 'String',
                    'info' => 'Type of organizations. One of: all, members, none, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationPaidAccount',
                    'type' => 'Boolean',
                    'info' => 'Organization paid account. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationsInvited',
                    'type' => 'String',
                    'info' => 'Type of organizations invited. One of: all, members, none, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationsInvitedFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organizations invited fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'notifications',
                    'type' => 'String',
                    'info' => 'Comma-separated list of notifications. One of: all, addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization, invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization, updateCheckItemStateOnCard.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationsEntities',
                    'type' => 'Boolean',
                    'info' => 'Notifications entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Notifications display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationsLimit',
                    'type' => 'String',
                    'info' => 'Notifications limit, a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of notification fields. One of: all, data, date, idMemberCreator, type, unread.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationMemberCreator',
                    'type' => 'Boolean',
                    'info' => 'Notification member creator. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationMemberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of notification member creator _fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationBefore',
                    'type' => 'String',
                    'info' => 'Notification before. An identifier of notification.',
                    'required' => false,
                ),
                array (
                    'name' => 'notificationSince',
                    'type' => 'String',
                    'info' => 'Notification since. An identifier notification.',
                    'required' => false,
                ),
                array (
                    'name' => 'tokens',
                    'type' => 'String',
                    'info' => 'Type of tokens. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'paidAccount',
                    'type' => 'Boolean',
                    'info' => 'Paid account. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardBackgrounds',
                    'type' => 'String',
                    'info' => 'Board backgrounds. One of: all, custom, default, none, premium.',
                    'required' => false,
                ),
                array (
                    'name' => 'customBoardBackgrounds',
                    'type' => 'String',
                    'info' => 'Custom board backgrounds. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'customStickers',
                    'type' => 'String',
                    'info' => 'Custom stickers. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'customEmoji',
                    'type' => 'String',
                    'info' => 'Custom emoji. One of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, id, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberActions',
            'description' => 'Get member actions.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Display. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Fields, one of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'format',
                    'type' => 'String',
                    'info' => 'Format, one of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since for sort, a date or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before for sort, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'page',
                    'type' => 'String',
                    'info' => 'Page limit must be less than 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'idModels',
                    'type' => 'String',
                    'info' => 'Only return actions related to these model identifiers.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Member. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'Boolean',
                    'info' => 'Member creator. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberBoardBackgrounds',
            'description' => 'Get member board backgrounds.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter, one of: all, custom, default, none, premium.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberSingleBoardBackground',
            'description' => 'Get member single board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardBackground',
                    'type' => 'String',
                    'info' => 'The identifier of the board background.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, brightness, fullSizeUrl, scaled, tile.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberBoardStars',
            'description' => 'Get member board stars.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getMemberSingleBoardStar',
            'description' => 'Get member single board stars.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardStar',
                    'type' => 'String',
                    'info' => 'The identifier of the board star.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getMemberBoads',
            'description' => 'Get member boards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, closed, members, open, organization, pinned, public, starred, unpinned.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Actions entities. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsFormat',
                    'type' => 'String',
                    'info' => 'Actions format, one of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsSince',
                    'type' => 'String',
                    'info' => 'Actions since, a date or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberships',
                    'type' => 'String',
                    'info' => 'Memberships, one of: none, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'organization',
                    'type' => 'Boolean',
                    'info' => 'Organization. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'lists',
                    'type' => 'String',
                    'info' => 'Type of lists, one of: all, closed, none, open.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getBoadsMemberIsInvitedTo',
            'description' => 'Get boads member is invited to.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberCards',
            'description' => 'Get list cards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Attachments, a boolean value or cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'stickers',
                    'type' => 'Boolean',
                    'info' => 'Stickers, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Members. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'Boolean',
                    'info' => 'Check item states, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Checklists, one of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit, a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before to show, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter, one of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberCustomBoardBackgrounds',
            'description' => 'Get member custom board backgrounds.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter, one of: all, none.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberCustomBoardBackground',
            'description' => 'Get member single custom board backgrounds.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardBackground',
                    'type' => 'String',
                    'info' => 'Board background identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Type of fields. One of: all, brightness, fullSizeUrl, scaled, tile.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberCustomEmoji',
            'description' => 'Get member custom emoji.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter, one of: all, none.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberSingleCustomEmoji',
            'description' => 'Get member single custom emoji.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCustomEmoji',
                    'type' => 'String',
                    'info' => 'Custom emoji identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Type of fields. One of: all, name, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberCustomStickers',
            'description' => 'Gets a list of all of the member uploaded stickers.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter, one of: all, none.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberSingleCustomSticker',
            'description' => 'Get member single uploaded stickers.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCustomSticker',
                    'type' => 'String',
                    'info' => 'The identifier of the custom sticker.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Fields to show, one of: all, scaled, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberDeltas',
            'description' => 'Gets member deltas.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'tags',
                    'type' => 'String',
                    'info' => 'A valid tag for subscribing.',
                    'required' => true,
                ),
                array (
                    'name' => 'ixLastUpdate',
                    'type' => 'String',
                    'info' => 'Last update, a number from -1 to Infinity.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getMemberNotifications',
            'description' => 'Gets member notifications.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Entities, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Display, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization, invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization, updateCheckItemStateOnCard.',
                    'required' => false,
                ),
                array (
                    'name' => 'readFilter',
                    'type' => 'String',
                    'info' => 'Type of read filter. One of: all, read, unread.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, data, date, idMemberCreator, type, unread.',
                    'required' => false,
                ),
                array (
                    'name' => 'page',
                    'type' => 'String',
                    'info' => 'Page to show, a number from 0 to 100.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before to show, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'Boolean',
                    'info' => 'Member creator, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberOrganizations',
            'description' => 'Gets member organizations.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter. One of: all, members, none, public.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'paidAccount',
                    'type' => 'Boolean',
                    'info' => 'Paid account. One of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationsMemberIsInvitedTo',
            'description' => 'Get organizations member is invited to.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getMemberSavedSearches',
            'description' => 'Get member saved searches.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getMemberSingleSavedSearch',
            'description' => 'Get member single saved searches.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idSavedSearch',
                    'type' => 'String',
                    'info' => 'The identifier of saved search.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getMemberTokens',
            'description' => 'Get member tokens.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Filter, one of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'webhooks',
                    'type' => 'Boolean',
                    'info' => 'Include webhooks, one of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateMember',
            'description' => 'Update member.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'fullName',
                    'type' => 'String',
                    'info' => 'Member full name, a string with a length of at least 1.',
                    'required' => false,
                ),
                array (
                    'name' => 'initials',
                    'type' => 'String',
                    'info' => 'Member initials, a string with a length from 1 to 4.',
                    'required' => false,
                ),
                array (
                    'name' => 'username',
                    'type' => 'String',
                    'info' => 'Member username, only lowercase letters, underscores, and numbers are allowed.',
                    'required' => false,
                ),
                array (
                    'name' => 'bio',
                    'type' => 'String',
                    'info' => 'Member bio, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarSource',
                    'type' => 'String',
                    'info' => 'Type of avatar source, one of: gravatar, none, upload.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/colorBlind',
                    'type' => 'Boolean',
                    'info' => 'Member preference color blind, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/locale',
                    'type' => 'String',
                    'info' => 'Member preference locale, a string with a length from 0 to 255.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/minutesBetweenSummaries-',
                    'type' => 'String',
                    'info' => 'Member preference minutes between summaries, 1 for disabled, 1 or 60.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberAvatarSource',
            'description' => 'Update member avatar source.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Avatar source type, one of: gravatar, none, upload.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberBio',
            'description' => 'Update member bio.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Member bio, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberBoardBackground',
            'description' => 'Update member board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardBackground',
                    'type' => 'String',
                    'info' => 'The identifier of the member board background.',
                    'required' => true,
                ),
                array (
                    'name' => 'tile',
                    'type' => 'Boolean',
                    'info' => 'Tile, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'brightness',
                    'type' => 'String',
                    'info' => 'Type of brightness, one of: dark, light, unknown.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberCustomBoardBackground',
            'description' => 'Update member custom board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardBackground',
                    'type' => 'String',
                    'info' => 'The identifier of the member custom board background.',
                    'required' => true,
                ),
                array (
                    'name' => 'tile',
                    'type' => 'Boolean',
                    'info' => 'Tile, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'brightness',
                    'type' => 'String',
                    'info' => 'Type of brightness, one of: dark, light, unknown.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberFullName',
            'description' => 'Update member fullname.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'New member fullname value, a string with a length of at least 1.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberInitials',
            'description' => 'Update member initials.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'New member initials value, a string with a length from 1 to 4.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberColorBlindPrefs',
            'description' => 'Update member color blind preference.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'New member color blind preference value, one of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberLocalePrefs',
            'description' => 'Update member locale preference.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'New member locale preference value, a string with a length from 0 to 255.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberSavedSearch',
            'description' => 'Update member saved search.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idSavedSearch',
                    'type' => 'String',
                    'info' => 'The identifier of the member saved search.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Member saved search name, a non-empty string with at least one non-space character.',
                    'required' => false,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'Member saved search query, a string with a length from 1 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'Member saved search position, one of: top, bottom, or a positive number.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateMemberUsername',
            'description' => 'Update member username.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'New member username value, a string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberAvatar',
            'description' => 'Create member avatar.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'New member avatar image.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberBoardBackground',
            'description' => 'Create member board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'Member board background image.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberBoardStar',
            'description' => 'Create member board star.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'The identifier of the board to star.',
                    'required' => true,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'The board star position. top, bottom, or a positive number.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberCustomBoardBackground',
            'description' => 'Create member custom board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'Member custom board background image.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberCustomEmoji',
            'description' => 'Create member custom emoji.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'Member custom emoji image.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Member custom emoji name, a string with a length from 2 to 64.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberCustomSticker',
            'description' => 'Create member custom sticker.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'Member custom sticker image.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createMemberSavedSearch',
            'description' => 'Create member saved search.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Member saved search name, a non-empty string with at least one non-space character.',
                    'required' => true,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'Member saved search query, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'pos',
                    'type' => 'String',
                    'info' => 'Member saved search position, one of: top, bottom, or a positive number.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberBoardBackground',
            'description' => 'Delete member board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardBackground',
                    'type' => 'String',
                    'info' => 'The identifier of the member board background.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberBoardStar',
            'description' => 'Delete member board star.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardStar',
                    'type' => 'String',
                    'info' => 'The identifier of the board star to delete.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberCustomBoardBackground',
            'description' => 'Delete member custom board background.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoardBackground',
                    'type' => 'String',
                    'info' => 'The identifier of the member custom board background.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberCustomSticker',
            'description' => 'Delete member custom sticker.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idCustomSticker',
                    'type' => 'String',
                    'info' => 'The identifier of the member custom sticker.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberSavedSearch',
            'description' => 'Delete member saved search.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMemberOrUsername',
                    'type' => 'String',
                    'info' => 'The identifier of the member or username.',
                    'required' => true,
                ),
                array (
                    'name' => 'idSavedSearch',
                    'type' => 'String',
                    'info' => 'The identifier of the saved search to delete.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getNotification',
            'description' => 'Get single notification.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Expand display informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Expand entities informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, data, date, idMemberCreator, type, unread.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'Boolean',
                    'info' => 'Expand member creator informations. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'board',
                    'type' => 'Boolean',
                    'info' => 'Expand board informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'list',
                    'type' => 'Boolean',
                    'info' => 'Expand list informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'card',
                    'type' => 'Boolean',
                    'info' => 'Expand card informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'organization',
                    'type' => 'Boolean',
                    'info' => 'Expand organization informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization_fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Expand member informations, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Member fields, one of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationBoard',
            'description' => 'Get single notification board.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationCard',
            'description' => 'Get single notification card.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationDisplay',
            'description' => 'Get single notification display.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationEntities',
            'description' => 'Get single notification entities.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationList',
            'description' => 'Get single notification list.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationMember',
            'description' => 'Get single notification member.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationMemberCreator',
            'description' => 'Get single notification member creator.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getNotificationOrganization',
            'description' => 'Get single notification organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateNotification',
            'description' => 'Update single notification.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
                array (
                    'name' => 'unread',
                    'type' => 'Boolean',
                    'info' => 'Mark as unread, one of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'markAllNotificationsAsRead',
            'description' => 'Mark all notifications as read.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idNotification',
                    'type' => 'String',
                    'info' => 'The identifier of the notification.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getOrganization',
            'description' => 'Get single organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Expand actions entities, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Expand actions display, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Type of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberships',
                    'type' => 'String',
                    'info' => 'Type of memberships. One of: none, all, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'membershipsMember',
                    'type' => 'Boolean',
                    'info' => 'Expand memberships member, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'membershipsMemberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of memberships member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'String',
                    'info' => 'Type of members. One of: admins, all, none, normal, owners.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberActivity',
                    'type' => 'Boolean',
                    'info' => 'Expand member activity, one of: true or false; works for premium organizations only.',
                    'required' => false,
                ),
                array (
                    'name' => 'membersInvited',
                    'type' => 'String',
                    'info' => 'Type of members invited. One of: admins, all, none, normal, owners.',
                    'required' => false,
                ),
                array (
                    'name' => 'membersInvitedFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of members invited fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'pluginData',
                    'type' => 'Boolean',
                    'info' => 'Expand pluginData, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boards',
                    'type' => 'String',
                    'info' => 'Type of boards. One of: all, open, closed, members, organization, public, starred.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Expand board actions entities, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsDisplay',
                    'type' => 'Boolean',
                    'info' => 'Expand board actions display, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsFormat',
                    'type' => 'String',
                    'info' => 'Type of board actions format. One of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsSince',
                    'type' => 'String',
                    'info' => 'Board actions since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionsLimit',
                    'type' => 'String',
                    'info' => 'Board actions limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardActionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardLists',
                    'type' => 'String',
                    'info' => 'Type of board lists. One of: all, closed, none, open.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardPluginData',
                    'type' => 'Boolean',
                    'info' => 'Expand board pluginData, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'paidAccount',
                    'type' => 'Boolean',
                    'info' => 'Expand paid account, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationActions',
            'description' => 'Get single organization actions.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'entities',
                    'type' => 'Boolean',
                    'info' => 'Expand entities, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'display',
                    'type' => 'Boolean',
                    'info' => 'Expand display, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Type of fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'format',
                    'type' => 'String',
                    'info' => 'Type of format. One of: list, count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'since',
                    'type' => 'String',
                    'info' => 'Since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'before',
                    'type' => 'String',
                    'info' => 'Before to show, a date.',
                    'required' => false,
                ),
                array (
                    'name' => 'page',
                    'type' => 'String',
                    'info' => 'Page limit must be less than 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'idModels',
                    'type' => 'String',
                    'info' => 'Only return actions related to these model identifiers.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Expand member, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreator',
                    'type' => 'Boolean',
                    'info' => 'Expand memberCreator, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberCreatorFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member creator fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationBoards',
            'description' => 'Get single organization boards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter. One of: all, open, closed, members, organization, public, starred.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsEntities',
                    'type' => 'Boolean',
                    'info' => 'Expand actions entities, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsLimit',
                    'type' => 'String',
                    'info' => 'Actions limit to show, a number from 0 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsFormat',
                    'type' => 'String',
                    'info' => 'Type of actions format. One of: count, list, minimal.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionsSince',
                    'type' => 'String',
                    'info' => 'Actions since to show. One of: A date, null or lastView.',
                    'required' => false,
                ),
                array (
                    'name' => 'actionFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of action fields. One of: all, data, date, idMemberCreator, type.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberships',
                    'type' => 'String',
                    'info' => 'Type of memberships. One of: none, all, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'organization',
                    'type' => 'Boolean',
                    'info' => 'Expand organization, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'lists',
                    'type' => 'String',
                    'info' => 'Type of lists. One of: all, closed, none, open.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationDeltas',
            'description' => 'Get single organization deltas.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'tags',
                    'type' => 'String',
                    'info' => 'A valid tag for subscribing.',
                    'required' => true,
                ),
                array (
                    'name' => 'ixLastUpdate',
                    'type' => 'String',
                    'info' => 'Last update, a number from -1 to Infinity.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationMembers',
            'description' => 'Get single organization members.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter. One of: all, admins, all, none, normal, owners.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Type of fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'activity',
                    'type' => 'Boolean',
                    'info' => 'Activity, one of: true, false, works for premium organizations only.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationMembersCards',
            'description' => 'Get single organization members cards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'An identifier, username, or organization name.',
                    'required' => true,
                ),
                array (
                    'name' => 'actions',
                    'type' => 'String',
                    'info' => 'Comma-separated list of actions. One of: all, addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember, updateOrganization.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachments',
                    'type' => 'String',
                    'info' => 'Attachments, a boolean value or cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'attachmentFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of attachment fields. One of: all, bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'members',
                    'type' => 'Boolean',
                    'info' => 'Expand members, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'checkItemStates',
                    'type' => 'Boolean',
                    'info' => 'Expand check item states, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'checklists',
                    'type' => 'String',
                    'info' => 'Checklists, one of: all, none.',
                    'required' => false,
                ),
                array (
                    'name' => 'board',
                    'type' => 'Boolean',
                    'info' => 'Expand board, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'list',
                    'type' => 'Boolean',
                    'info' => 'Expand list, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'listFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of list fields. One of: all, closed, idBoard, name, pos, subscribed.',
                    'required' => false,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Type of filter. One of: all, closed, none, open, visible.',
                    'required' => false,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationMembersInvited',
            'description' => 'Get single organization members invited.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'fields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of fields. One of: all, avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationsMemberships',
            'description' => 'Get single organization memberships.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'filter',
                    'type' => 'String',
                    'info' => 'Comma-separated list of filter. One of: all, active, admin, deactivated, me, normal.',
                    'required' => false,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Expand member, one of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getOrganizationSingleMembership',
            'description' => 'Get single organization single membership.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMembership',
                    'type' => 'String',
                    'info' => 'A membership document identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'member',
                    'type' => 'Boolean',
                    'info' => 'Expand member, one of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganization',
            'description' => 'Update single organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'prefs/orgInviteRestrict',
                    'type' => 'String',
                    'info' => 'An email address with optional expansion tokens.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/externalMembersDisabled',
                    'type' => 'Boolean',
                    'info' => 'Organization preference external members disabled. One of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/associatedDomain',
                    'type' => 'String',
                    'info' => 'The google apps domain to link this org to.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/googleAppsVersion',
                    'type' => 'String',
                    'info' => 'Organization preference google apps version, a number from 1 to 2.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/boardVisibilityRestrict/private',
                    'type' => 'String',
                    'info' => 'Organization preference board visibility restrict private. One of: admin, none, org.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/boardVisibilityRestrict/org',
                    'type' => 'String',
                    'info' => 'Organization preference board visibility restrict organization. One of: admin, none, org.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/boardVisibilityRestrict/public',
                    'type' => 'String',
                    'info' => 'Organization preference board visibility restrict public. One of: admin, none, org.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'Organization name, a string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed.',
                    'required' => false,
                ),
                array (
                    'name' => 'displayName',
                    'type' => 'String',
                    'info' => 'Organization display name, a string with a length of at least 1.',
                    'required' => false,
                ),
                array (
                    'name' => 'desc',
                    'type' => 'String',
                    'info' => 'Organization description, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'website',
                    'type' => 'String',
                    'info' => 'Organization website, a URL starting with http:// or https:// or null.',
                    'required' => false,
                ),
                array (
                    'name' => 'prefs/permissionLevel',
                    'type' => 'String',
                    'info' => 'Organization preference permission level. One of: private, public.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationDesc',
            'description' => 'Update single organization description.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Organization description value, a string with a length from 0 to 16384.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationDisplayName',
            'description' => 'Update single organization display name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Organization display name value, a string with a length of at least 1.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationMembers',
            'description' => 'Update single organization members.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'An email address.',
                    'required' => true,
                ),
                array (
                    'name' => 'fullName',
                    'type' => 'String',
                    'info' => 'Full name, a string with a length of at least 1.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Type, one of: admin, normal.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationSingleMember',
            'description' => 'Update single organization single member.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'Single member identifier, username, or organization name.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Single member type, one of: admin, normal.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deactivateOrganizationMember',
            'description' => 'Deactivate single organization single member.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'Single member identifier, username, or organization name.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Single member deactivated, one of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationMembership',
            'description' => 'Update single organization membership.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMembership',
                    'type' => 'String',
                    'info' => 'Membership identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'type',
                    'type' => 'String',
                    'info' => 'Membership type, one of: admin, normal.',
                    'required' => true,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationName',
            'description' => 'Update single organization name.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Organization name, a string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationAssociatedDomain',
            'description' => 'Update single organization associated domain.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'The google apps domain to link this org to.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationExternalMembersPrefs',
            'description' => 'Update single organization external members preferences disabled.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'Boolean',
                    'info' => 'Organization external members preferences disabled. One of: true, false.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationInviteRestrictPrefs',
            'description' => 'Update single organization invite restrict.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'An email address with optional expansion tokens.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationPermissionLevelPrefs',
            'description' => 'Update single organization permission level.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'Organization permission level preferences. One of: private, public.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateOrganizationWebsite',
            'description' => 'Update single organization website.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'A URL starting with http:// or https://.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createOrganization',
            'description' => 'Create organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New organization name, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'displayName',
                    'type' => 'String',
                    'info' => 'New organization display name, a string with a length of at least 1. Cannot begin or end with a space.',
                    'required' => false,
                ),
                array (
                    'name' => 'desc',
                    'type' => 'String',
                    'info' => 'New organization description, a string with a length from 0 to 16384.',
                    'required' => false,
                ),
                array (
                    'name' => 'website',
                    'type' => 'String',
                    'info' => 'New organization website, a URL starting with http:// or https://.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createOrganizationLogo',
            'description' => 'Create organization logo.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'file',
                    'type' => 'File',
                    'info' => 'Organization logo image.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteOrganization',
            'description' => 'Delete organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteOrganizationLogo',
            'description' => 'Delete organization logo.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberFromOrganization',
            'description' => 'Delete member from organization.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'An identifier, username.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteMemberFromAllOrganizationBoards',
            'description' => 'Delete member from all organization boards.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'idMember',
                    'type' => 'String',
                    'info' => 'An identifier, username.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteOrganizationAssociatedDomain',
            'description' => 'Delete organization associated domain.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteOrganizationInviteRestrict',
            'description' => 'Delete organization invite restrict.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'idOrgOrName',
                    'type' => 'String',
                    'info' => 'The identifier or name of organization.',
                    'required' => true,
                ),
                array (
                    'name' => 'value',
                    'type' => 'String',
                    'info' => 'An email address with optional expansion tokens.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'search',
            'description' => 'Search in your Trello account.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'Search query, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'idBoards',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'idOrganizations',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'idCards',
                    'type' => 'String',
                    'info' => 'A comma-separated list of objectIds, 24-character hex strings.',
                    'required' => false,
                ),
                array (
                    'name' => 'modelTypes',
                    'type' => 'String',
                    'info' => 'Comma-separated list of model types. One of: all, actions, boards, cards, members, organizations.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of board fields. One of: all, closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'boardsLimit',
                    'type' => 'String',
                    'info' => 'Boards limit, a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of card fields. One of: all, badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardsLimit',
                    'type' => 'String',
                    'info' => 'Cards limit. One of: a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardsPage',
                    'type' => 'String',
                    'info' => 'Cards page, a number from 0 to 100.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardBoard',
                    'type' => 'Boolean',
                    'info' => 'Card board, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardList',
                    'type' => 'Boolean',
                    'info' => 'Card list, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardMembers',
                    'type' => 'Boolean',
                    'info' => 'Card members, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardStickers',
                    'type' => 'Boolean',
                    'info' => 'Card stickers, one of: true, false.',
                    'required' => false,
                ),
                array (
                    'name' => 'cardAttachments',
                    'type' => 'String',
                    'info' => 'Card attachments, one of: A boolean value or cover.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of organization fields. One of: all, billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website.',
                    'required' => false,
                ),
                array (
                    'name' => 'organizationsLimit',
                    'type' => 'String',
                    'info' => 'Organizations limit, one of: a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'memberFields',
                    'type' => 'String',
                    'info' => 'Comma-separated list of member fields. One of: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username.',
                    'required' => false,
                ),
                array (
                    'name' => 'membersLimit',
                    'type' => 'String',
                    'info' => 'Members limit, one of: a number from 1 to 1000.',
                    'required' => false,
                ),
                array (
                    'name' => 'partial',
                    'type' => 'Boolean',
                    'info' => 'Partial, one of: true, false.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'searchMembers',
            'description' => 'Search members in your Trello account.',
            'args' => array (
                array (
                    'name' => 'apiKeys',
                    'type' => 'credentials',
                    'info' => 'Your API keys credentials.',
                    'required' => true,
                ),
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'query',
                    'type' => 'String',
                    'info' => 'Search query, a string with a length from 1 to 16384.',
                    'required' => true,
                ),
                array (
                    'name' => 'limit',
                    'type' => 'String',
                    'info' => 'Search limit, a number from 1 to 20.',
                    'required' => false,
                ),
                array (
                    'name' => 'idBoard',
                    'type' => 'String',
                    'info' => 'Board identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'idOrganization',
                    'type' => 'String',
                    'info' => 'Organization identifier.',
                    'required' => false,
                ),
                array (
                    'name' => 'onlyOrgMembers',
                    'type' => 'Boolean',
                    'info' => 'Search only organization members, one of: true, false.',
                    'required' => false,
                ),
            ),
        ),
    ),
    'custom' => array (
        'getToken' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}',
            'method' => 'GET',
        ),
        'deleteToken' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}',
            'method' => 'DELETE',
        ),
        'getTokenMember' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}/member',
            'method' => 'GET',
        ),
        'getTokenWebhooks' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}/webhooks',
            'method' => 'GET',
        ),
        'getTokenSingleWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
                'idWebhook' => 'idWebhook',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}/webhooks/{{idWebhook}}',
            'method' => 'GET',
        ),
        'createTokenWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
                'callbackURL' => 'callbackURL',
                'idModel' => 'idModel',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}/webhooks',
            'method' => 'POST',
        ),
        'updateTokenWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
                'callbackURL' => 'callbackURL',
                'idModel' => 'idModel',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}/webhooks',
            'method' => 'PUT',
        ),
        'removeTokenWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'tokenId' => 'tokenId',
                'idWebhook' => 'idWebhook',
            ),
            'vendorUrl' => 'https://api.trello.com/1/tokens/{{tokenId}}/webhooks/{{idWebhook}}',
            'method' => 'DELETE',
        ),
        'getWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idWebhook' => 'idWebhook',
            ),
            'vendorUrl' => 'https://api.trello.com/1/webhooks/{{idWebhook}}',
            'method' => 'GET',
        ),
        'createWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'callbackURL' => 'callbackURL',
                'idModel' => 'idModel',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://api.trello.com/1/webhooks',
            'method' => 'POST',
        ),
        'updateWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idWebhook' => 'idWebhook',
                'callbackURL' => 'callbackURL',
                'idModel' => 'idModel',
                'description' => 'description',
            ),
            'vendorUrl' => 'https://api.trello.com/1/webhooks/{{idWebhook}}',
            'method' => 'PUT',
        ),
        'deleteWebhook' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idWebhook' => 'idWebhook',
            ),
            'vendorUrl' => 'https://api.trello.com/1/webhooks/{{idWebhook}}',
            'method' => 'DELETE',
        ),
        'getType' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'teamOrUserId' => 'teamOrUserId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/types/{{teamOrUserId}}',
            'method' => 'GET',
        ),
        'getBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsDisplay' => 'actions_display',
                'actionsFormat' => 'actions_format',
                'actionsSince' => 'actions_since',
                'actionsLimit' => 'actions_limit',
                'actionFields' => 'action_fields',
                'actionMember' => 'action_member',
                'actionMemberFields' => 'action_member_fields',
                'actionMemberCreator' => 'action_memberCreator',
                'actionMemberCreatorFields' => 'action_memberCreator_fields',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'cardAttachments' => 'card_attachments',
                'cardAttachmentFields' => 'card_attachment_fields',
                'cardChecklists' => 'card_checklists',
                'cardPluginData' => 'card_pluginData',
                'cardStickers' => 'card_stickers',
                'boardStars' => 'boardStars',
                'labels' => 'labels',
                'labelFields' => 'label_fields',
                'labelsLimit' => 'labels_limit',
                'lists' => 'lists',
                'listFields' => 'list_fields',
                'memberships' => 'memberships',
                'membershipsMember' => 'memberships_member',
                'membershipsMemberFields' => 'memberships_member_fields',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'membersInvited' => 'membersInvited',
                'membersInvitedFields' => 'membersInvited_fields',
                'pluginData' => 'pluginData',
                'checklists' => 'checklists',
                'checklistFields' => 'checklist_fields',
                'organization' => 'organization',
                'organizationFields' => 'organization_fields',
                'organizationMemberships' => 'organization_memberships',
                'organizationPluginData' => 'organization_pluginData',
                'myPrefs' => 'myPrefs',
                'tags' => 'tags',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}',
            'method' => 'GET',
        ),
        'getBoardActions' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'entities' => 'entities',
                'display' => 'display',
                'filter' => 'filter',
                'format' => 'format',
                'since' => 'since',
                'before' => 'before',
                'page' => 'page',
                'idModels' => 'idModels',
                'limit' => 'limit',
                'fields' => 'fields',
                'member' => 'member',
                'memberFields' => 'member_fields',
                'memberCreator' => 'memberCreator',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/actions',
            'method' => 'GET',
        ),
        'getBoardStars' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'filter' => 'filter',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/boardStars',
            'method' => 'GET',
        ),
        'getBoardCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'actions' => 'actions',
                'filter' => 'filter',
                'fields' => 'fields',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'checklists' => 'checklists',
                'stickers' => 'stickers',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'limit' => 'limit',
                'since' => 'since',
                'before' => 'before',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/cards',
            'method' => 'GET',
        ),
        'getBoardSingleCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idCard' => 'idCard',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsDisplay' => 'actions_display',
                'actionsLimit' => 'actions_limit',
                'actionFields' => 'action_fields',
                'actionMemberCreatorFields' => 'action_memberCreator_fields',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'checkItemStateFields' => 'checkItemState_fields',
                'labels' => 'labels',
                'checklists' => 'checklists',
                'checklistFields' => 'checklist_fields',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/cards/{{idCard}}',
            'method' => 'GET',
        ),
        'getBoardChecklists' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'checkItems' => 'checkItems',
                'checkItemFields' => 'checkItem_fields',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/cards',
            'method' => 'GET',
        ),
        'getBoardDeltas' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'tags' => 'tags',
                'ixLastUpdate' => 'ixLastUpdate',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/deltas',
            'method' => 'GET',
        ),
        'getBoardLabels' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'fields' => 'fields',
                'limit' => 'limit',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/labels',
            'method' => 'GET',
        ),
        'getBoardSingleLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idLabel' => 'idLabel',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/labels/{{idLabel}}',
            'method' => 'GET',
        ),
        'getBoardLists' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/lists',
            'method' => 'GET',
        ),
        'getBoardMembers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'filter' => 'filter',
                'fields' => 'fields',
                'activity' => 'activity',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/members',
            'method' => 'GET',
        ),
        'getSingleBoardMemberCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idMember' => 'idMember',
                'actions' => 'actions',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'checklists' => 'checklists',
                'board' => 'board',
                'boardFields' => 'board_fields',
                'list' => 'list',
                'listFields' => 'list_fields',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/members/{{idMember}}/cards',
            'method' => 'GET',
        ),
        'getMembersInvitedToBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/membersInvited',
            'method' => 'GET',
        ),
        'getBoardMemberships' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'filter' => 'filter',
                'member' => 'member',
                'memberFields' => 'member_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/memberships',
            'method' => 'GET',
        ),
        'getBoardSingleMembership' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idMembership' => 'idMembership',
                'member' => 'member',
                'memberFields' => 'member_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/memberships/{{idMembership}}',
            'method' => 'GET',
        ),
        'getBoardPreferences' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs',
            'method' => 'GET',
        ),
        'getBoardOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/organization',
            'method' => 'GET',
        ),
        'updateBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'name' => 'name',
                'desc' => 'desc',
                'closed' => 'closed',
                'subscribed' => 'subscribed',
                'idOrganization' => 'idOrganization',
                'prefsPermissionLevel' => 'prefs/permissionLevel',
                'prefsSelfJoin' => 'prefs/selfJoin',
                'prefsCardCovers' => 'prefs/cardCovers',
                'prefsInvitations' => 'prefs/invitations',
                'prefsVoting' => 'prefs/voting',
                'prefsComments' => 'prefs/comments',
                'prefsBackground' => 'prefs/background',
                'prefsCardAging' => 'prefs/cardAging',
                'prefsCalendarFeedEnabled' => 'prefs/calendarFeedEnabled',
                'labelNamesGreen' => 'labelNames/green',
                'labelNamesYellow' => 'labelNames/yellow',
                'labelNamesOrange' => 'labelNames/orange',
                'labelNamesRed' => 'labelNames/red',
                'labelNamesPurple' => 'labelNames/purple',
                'labelNamesBlue' => 'labelNames/blue',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}',
            'method' => 'PUT',
        ),
        'updateBoardCloseState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/closed',
            'method' => 'PUT',
        ),
        'updateBoardDescription' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/desc',
            'method' => 'PUT',
        ),
        'updateBoardOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/idOrganization',
            'method' => 'PUT',
        ),
        'updateBoardSingleLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'labelColor' => 'labelColor',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/labelNames/{{labelColor}}',
            'method' => 'PUT',
        ),
        'addMemberToBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'email' => 'email',
                'fullName' => 'fullName',
                'type' => 'type',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/members',
            'method' => 'PUT',
        ),
        'setMemberRoleOnBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idMember' => 'idMember',
                'type' => 'type',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/members/{{idMember}}',
            'method' => 'PUT',
        ),
        'updateBoardMembership' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idMembership' => 'idMembership',
                'type' => 'type',
                'memberFields' => 'member_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/memberships/{{idMembership}}',
            'method' => 'PUT',
        ),
        'setBoardName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/name',
            'method' => 'PUT',
        ),
        'updateBoardSubscriptionState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/subscribed',
            'method' => 'PUT',
        ),
        'updateEmailPosition' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/emailPosition',
            'method' => 'PUT',
        ),
        'updateEmailList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/idEmailList',
            'method' => 'PUT',
        ),
        'setShowListGuideState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/showListGuide',
            'method' => 'PUT',
        ),
        'updateShowSidebarState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/showSidebar',
            'method' => 'PUT',
        ),
        'updateShowSidebarActivityState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/showSidebarActivity',
            'method' => 'PUT',
        ),
        'updateShowSidebarBoardActionsState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/showSidebarBoardActions',
            'method' => 'PUT',
        ),
        'updateShowSidebarMembersState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/myPrefs/showSidebarMembers',
            'method' => 'PUT',
        ),
        'updateBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/background',
            'method' => 'PUT',
        ),
        'updateCalendarFeedEnableState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/calendarFeedEnabled',
            'method' => 'PUT',
        ),
        'updateBoardCardAgingPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/cardAging',
            'method' => 'PUT',
        ),
        'updateBoardCardCoversState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/cardCovers',
            'method' => 'PUT',
        ),
        'updateBoardCommentsPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/comments',
            'method' => 'PUT',
        ),
        'updateBoardInvitationsPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/invitations',
            'method' => 'PUT',
        ),
        'updateBoardPermissionLevel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/permissionLevel',
            'method' => 'PUT',
        ),
        'updateBoardSelfJoinState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/selfJoin',
            'method' => 'PUT',
        ),
        'updateBoardVotingPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/prefs/voting',
            'method' => 'PUT',
        ),
        'createBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'name' => 'name',
                'defaultLabels' => 'defaultLabels',
                'defaultLists' => 'defaultLists',
                'desc' => 'desc',
                'idOrganization' => 'idOrganization',
                'idBoardSource' => 'idBoardSource',
                'keepFromSource' => 'keepFromSource',
                'powerUps' => 'powerUps',
                'prefsPermissionLevel' => 'prefs_permissionLevel',
                'prefsVoting' => 'prefs_voting',
                'prefsComments' => 'prefs_comments',
                'prefsInvitations' => 'prefs_invitations',
                'prefsSelfJoin' => 'prefs_selfJoin',
                'prefsCardCovers' => 'prefs_cardCovers',
                'prefsBackground' => 'prefs_background',
                'prefsCardAging' => 'prefs_cardAging',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards',
            'method' => 'POST',
        ),
        'createBoardCalendarKey' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/calendarKey/generate',
            'method' => 'POST',
        ),
        'addChecklistToBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'name' => 'name',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/checklists',
            'method' => 'POST',
        ),
        'createBoardEmailKey' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/emailKey/generate',
            'method' => 'POST',
        ),
        'createBoardLabels' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'name' => 'name',
                'color' => 'color',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/labels',
            'method' => 'POST',
        ),
        'createBoardList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'name' => 'name',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/lists',
            'method' => 'POST',
        ),
        'markBoardViewed' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/markAsViewed',
            'method' => 'POST',
        ),
        'createBoardPowerUps' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/powerUps',
            'method' => 'POST',
        ),
        'deleteMemberFromBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'idMember' => 'idMember',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/members/{{idMember}}',
            'method' => 'DELETE',
        ),
        'deleteBoardPowerUp' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'boardId' => 'boardId',
                'powerUp' => 'powerUp',
            ),
            'vendorUrl' => 'https://api.trello.com/1/boards/{{boardId}}/powerUps/{{powerUp}}',
            'method' => 'DELETE',
        ),
        'getSingleCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsDisplay' => 'actions_display',
                'actionsLimit' => 'actions_limit',
                'actionFields' => 'action_fields',
                'actionMemberCreatorFields' => 'action_memberCreator_fields',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'membersVoted' => 'membersVoted',
                'memberVotedFields' => 'memberVoted_fields',
                'checkItemStates' => 'checkItemStates',
                'checkItemStateFields' => 'checkItemState_fields',
                'checklists' => 'checklists',
                'checklistFields' => 'checklist_fields',
                'board' => 'board',
                'boardFields' => 'board_fields',
                'list' => 'list',
                'listFields' => 'list_fields',
                'pluginData' => 'pluginData',
                'stickers' => 'stickers',
                'stickerFields' => 'sticker_fields',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}',
            'method' => 'GET',
        ),
        'getCardActions' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'entities' => 'entities',
                'display' => 'display',
                'filter' => 'filter',
                'fields' => 'fields',
                'limit' => 'limit',
                'format' => 'format',
                'since' => 'since',
                'before' => 'before',
                'idModels' => 'idModels',
                'member' => 'member',
                'memberFields' => 'member_fields',
                'memberCreator' => 'memberCreator',
                'memberCreatorFields' => 'memberCreator_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/actions',
            'method' => 'GET',
        ),
        'getCardAttachments' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
                'filter' => 'filter',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/attachments',
            'method' => 'GET',
        ),
        'getCardSingleAttachment' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idAttachment' => 'idAttachment',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/attachments/{{idAttachment}}',
            'method' => 'GET',
        ),
        'getCardBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/board',
            'method' => 'GET',
        ),
        'getCardChecklistItemStates' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checkItemStates',
            'method' => 'GET',
        ),
        'getCardChecklists' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'checkItems' => 'checkItems',
                'checkItemFields' => 'checkItem_fields',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklists',
            'method' => 'GET',
        ),
        'getCardSingleCheckItem' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idCheckItem' => 'idCheckItem',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checkItem/{{idCheckItem}}',
            'method' => 'GET',
        ),
        'getCardList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/list',
            'method' => 'GET',
        ),
        'getCardMembers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/members',
            'method' => 'GET',
        ),
        'getMemberVoteToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/membersVoted',
            'method' => 'GET',
        ),
        'getCardStickers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/stickers',
            'method' => 'GET',
        ),
        'getCardSingleSticker' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idSticker' => 'idSticker',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/stickers/{{idSticker}}',
            'method' => 'GET',
        ),
        'updateSingleCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'name' => 'name',
                'desc' => 'desc',
                'closed' => 'closed',
                'idMembers' => 'idMembers',
                'idAttachmentCover' => 'idAttachmentCover',
                'idList' => 'idList',
                'idLabels' => 'idLabels',
                'idBoard' => 'idBoard',
                'pos' => 'pos',
                'due' => 'due',
                'dueComplete' => 'dueComplete',
                'subscribed' => 'subscribed',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}',
            'method' => 'PUT',
        ),
        'updateCardCheckItemName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
                'idCheckItem' => 'idCheckItem',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}/checkItem/{{idCheckItem}}/name',
            'method' => 'PUT',
        ),
        'updateCardCheckItemPos' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
                'idCheckItem' => 'idCheckItem',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}/checkItem/{{idCheckItem}}/pos',
            'method' => 'PUT',
        ),
        'updateCardCheckItemState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
                'idCheckItem' => 'idCheckItem',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}/checkItem/{{idCheckItem}}/state',
            'method' => 'PUT',
        ),
        'updateCardCheckItem' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idCheckItem' => 'idCheckItem',
                'name' => 'name',
                'state' => 'state',
                'idChecklist' => 'idChecklist',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checkItem/{{idCheckItem}}',
            'method' => 'PUT',
        ),
        'updateCardCloseState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/closed',
            'method' => 'PUT',
        ),
        'updateCardDescription' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/desc',
            'method' => 'PUT',
        ),
        'updateCardDueDate' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/due',
            'method' => 'PUT',
        ),
        'updateCardDueComplete' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/dueComplete',
            'method' => 'PUT',
        ),
        'setAttachmentAsCoverOfCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idAttachmentCover',
            'method' => 'PUT',
        ),
        'setCardBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
                'idList' => 'idList',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idBoard',
            'method' => 'PUT',
        ),
        'setCardList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idList',
            'method' => 'PUT',
        ),
        'setCardMembers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idMembers',
            'method' => 'PUT',
        ),
        'updateCardName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/name',
            'method' => 'PUT',
        ),
        'updateCardPosition' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/pos',
            'method' => 'PUT',
        ),
        'updateCardSingleSticker' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idSticker' => 'idSticker',
                'top' => 'top',
                'left' => 'left',
                'zIndex' => 'zIndex',
                'rotate' => 'rotate',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/stickers/{{idSticker}}',
            'method' => 'PUT',
        ),
        'updateCardSubscriptionState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/subscribed',
            'method' => 'PUT',
        ),
        'createCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'name' => 'name',
                'desc' => 'desc',
                'pos' => 'pos',
                'due' => 'due',
                'dueComplete' => 'dueComplete',
                'idMembers' => 'idMembers',
                'idLabels' => 'idLabels',
                'urlSource' => 'urlSource',
                'fileSource' => 'urlSource',
                'idCardSource' => 'idCardSource',
                'keepFromSource' => 'keepFromSource',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards',
            'method' => 'POST',
        ),
        'addCommentToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'text' => 'text',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/actions/comments',
            'method' => 'POST',
        ),
        'addAttachmentToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'url' => 'url',
                'file' => 'url',
                'name' => 'name',
                'mimeType' => 'mimeType',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/attachments',
            'method' => 'POST',
        ),
        'createCardCheckItem' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
                'name' => 'name',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}/checkItem',
            'method' => 'POST',
        ),
        'convertCardCheckItemToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
                'idCheckItem' => 'idCheckItem',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}/checkItem/{{idCheckItem}}/convertToCard',
            'method' => 'POST',
        ),
        'addChecklistToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
                'name' => 'name',
                'idChecklistSource' => 'idChecklistSource',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklists',
            'method' => 'POST',
        ),
        'addCardLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idLabels',
            'method' => 'POST',
        ),
        'addMemberToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idMembers',
            'method' => 'POST',
        ),
        'createCardLabels' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'color' => 'color',
                'name' => 'name',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/labels',
            'method' => 'POST',
        ),
        'markCardAssociatedNotificationsRead' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/markAssociatedNotificationsRead',
            'method' => 'POST',
        ),
        'addMemberVoteToCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/membersvoted',
            'method' => 'POST',
        ),
        'createCardSticker' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'image' => 'image',
                'top' => 'top',
                'left' => 'left',
                'zIndex' => 'zIndex',
                'rotate' => 'rotate',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/stickers',
            'method' => 'POST',
        ),
        'deleteCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}',
            'method' => 'DELETE',
        ),
        'deleteAttachmentFromCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idAttachment' => 'idAttachment',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/attachments/{{idAttachment}}',
            'method' => 'DELETE',
        ),
        'deleteCardCheckItem' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
                'idCheckItem' => 'idCheckItem',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}/checkItem/{{idCheckItem}}',
            'method' => 'DELETE',
        ),
        'deleteCardCheckList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idChecklist' => 'idChecklist',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/checklist/{{idChecklist}}',
            'method' => 'DELETE',
        ),
        'deleteLabelFromCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idLabel' => 'idLabel',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idLabels/{{idLabel}}',
            'method' => 'DELETE',
        ),
        'deleteMemberFromCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idMember' => 'idMember',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/idMembers/{{idMember}}',
            'method' => 'DELETE',
        ),
        'deleteMemberVoteFromCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idMember' => 'idMember',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/membersVoted/{{idMember}}',
            'method' => 'DELETE',
        ),
        'deleteSingleStickerFromCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'cardIdOrShortlink' => 'cardIdOrShortlink',
                'idSticker' => 'idSticker',
            ),
            'vendorUrl' => 'https://api.trello.com/1/cards/{{cardIdOrShortlink}}/stickers/{{idSticker}}',
            'method' => 'DELETE',
        ),
        'getChecklist' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'checkItems' => 'checkItems',
                'checkItemFields' => 'checkItem_fields',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}',
            'method' => 'GET',
        ),
        'getChecklistBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/board',
            'method' => 'GET',
        ),
        'getChecklistCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'actions' => 'actions',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'stickers' => 'stickers',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'checklists' => 'checklists',
                'limit' => 'limit',
                'since' => 'since',
                'before' => 'before',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/cards',
            'method' => 'GET',
        ),
        'getChecklistItems' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/checkItems',
            'method' => 'GET',
        ),
        'updateChecklist' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'name' => 'name',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}',
            'method' => 'PUT',
        ),
        'updateChecklistName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/name',
            'method' => 'PUT',
        ),
        'updateChecklistPosition' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/pos',
            'method' => 'PUT',
        ),
        'createChecklist' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idCard' => 'idCard',
                'name' => 'name',
                'pos' => 'pos',
                'idChecklistSource' => 'idChecklistSource',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists',
            'method' => 'POST',
        ),
        'createItemInChecklist' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'name' => 'name',
                'pos' => 'pos',
                'checked' => 'checked',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/checkItems',
            'method' => 'POST',
        ),
        'deleteChecklist' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}',
            'method' => 'DELETE',
        ),
        'deleteItemFromChecklist' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idChecklist' => 'idChecklist',
                'idCheckItem' => 'idCheckItem',
            ),
            'vendorUrl' => 'https://api.trello.com/1/checklists/{{idChecklist}}/checkItems/{{idCheckItem}}',
            'method' => 'DELETE',
        ),
        'getList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'board' => 'board',
                'boardFields' => 'board_fields',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}',
            'method' => 'GET',
        ),
        'getListActions' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'entities' => 'entities',
                'display' => 'display',
                'filter' => 'filter',
                'fields' => 'fields',
                'format' => 'format',
                'idModels' => 'idModels',
                'member' => 'member',
                'memberFields' => 'member_fields',
                'memberCreator' => 'memberCreator',
                'memberCreatorFields' => 'memberCreator_fields',
                'limit' => 'limit',
                'since' => 'since',
                'before' => 'before',
                'page' => 'page',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/actions',
            'method' => 'GET',
        ),
        'getListBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/board',
            'method' => 'GET',
        ),
        'getListCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'actions' => 'actions',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'stickers' => 'stickers',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'checklists' => 'checklists',
                'filter' => 'filter',
                'fields' => 'fields',
                'limit' => 'limit',
                'since' => 'since',
                'before' => 'before',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/cards',
            'method' => 'GET',
        ),
        'updateList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'name' => 'name',
                'closed' => 'closed',
                'idBoard' => 'idBoard',
                'pos' => 'pos',
                'subscribed' => 'subscribed',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}',
            'method' => 'PUT',
        ),
        'updateListCloseState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/closed',
            'method' => 'PUT',
        ),
        'updateListBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'value' => 'value',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/idBoard',
            'method' => 'PUT',
        ),
        'updateListName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/name',
            'method' => 'PUT',
        ),
        'updateListPosition' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/pos',
            'method' => 'PUT',
        ),
        'updateListSubscriptionState' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/subscribed',
            'method' => 'PUT',
        ),
        'createList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'name' => 'name',
                'idBoard' => 'idBoard',
                'idListSource' => 'idListSource',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists',
            'method' => 'POST',
        ),
        'archiveAllListCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/archiveAllCards',
            'method' => 'POST',
        ),
        'moveAllListCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idList' => 'idList',
                'idBoard' => 'idBoard',
                'newListId' => 'newListId',
            ),
            'vendorUrl' => 'https://api.trello.com/1/lists/{{idList}}/moveAllCards',
            'method' => 'POST',
            'custom' => true,
        ),
        'getLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idLabel' => 'idLabel',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/labels/{{idLabel}}',
            'method' => 'GET',
        ),
        'getLabelBoards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idLabel' => 'idLabel',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/labels/{{idLabel}}/board',
            'method' => 'GET',
        ),
        'updateLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idLabel' => 'idLabel',
                'name' => 'name',
                'color' => 'color',
            ),
            'vendorUrl' => 'https://api.trello.com/1/labels/{{idLabel}}',
            'method' => 'PUT',
        ),
        'createLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idBoard' => 'idBoard',
                'name' => 'name',
                'color' => 'color',
            ),
            'vendorUrl' => 'https://api.trello.com/1/labels',
            'method' => 'POST',
        ),
        'deleteLabel' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idLabel' => 'idLabel',
            ),
            'vendorUrl' => 'https://api.trello.com/1/labels/{{idLabel}}',
            'method' => 'DELETE',
        ),
        'getMember' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsDisplay' => 'actions_display',
                'actionsLimit' => 'actions_limit',
                'actionFields' => 'action_fields',
                'actionSince' => 'action_since',
                'actionBefore' => 'action_before',
                'cards' => 'cards',
                'cardFields' => 'card_fields',
                'cardMembers' => 'card_members',
                'cardMemberFields' => 'card_member_fields',
                'cardAttachments' => 'card_attachments',
                'cardAttachmentFields' => 'card_attachment_fields',
                'cardStickers' => 'card_stickers',
                'boards' => 'boards',
                'boardFields' => 'board_fields',
                'boardActions' => 'board_actions',
                'boardActionsEntities' => 'board_actions_entities',
                'boardActionsDisplay' => 'board_actions_display',
                'boardActionsFormat' => 'board_actions_format',
                'boardActionsSince' => 'board_actions_since',
                'boardActionsLimit' => 'board_actions_limit',
                'boardActionFields' => 'board_action_fields',
                'boardLists' => 'board_lists',
                'boardMemberships' => 'board_memberships',
                'boardOrganization' => 'board_organization',
                'boardOrganizationFields' => 'board_organization_fields',
                'boardsInvited' => 'boardsInvited',
                'boardsInvitedFields' => 'boardsInvited_fields',
                'boardStars' => 'boardStars',
                'savedSearches' => 'savedSearches',
                'organizations' => 'organizations',
                'organizationFields' => 'organization_fields',
                'organizationPaidAccount' => 'organization_paid_account',
                'organizationsInvited' => 'organizationsInvited',
                'organizationsInvitedFields' => 'organizationsInvited_fields',
                'notifications' => 'notifications',
                'notificationsEntities' => 'notifications_entities',
                'notificationsDisplay' => 'notifications_display',
                'notificationsLimit' => 'notifications_limit',
                'notificationFields' => 'notification_fields',
                'notificationMemberCreator' => 'notification_memberCreator',
                'notificationMemberCreatorFields' => 'notification_memberCreator_fields',
                'notificationBefore' => 'notification_before',
                'notificationSince' => 'notification_since',
                'tokens' => 'tokens',
                'paidAccount' => 'paid_account',
                'boardBackgrounds' => 'boardBackgrounds',
                'customBoardBackgrounds' => 'customBoardBackgrounds',
                'customStickers' => 'customStickers',
                'customEmoji' => 'customEmoji',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}',
            'method' => 'GET',
        ),
        'getMemberActions' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'entities' => 'entities',
                'display' => 'display',
                'filter' => 'filter',
                'fields' => 'fields',
                'limit' => 'limit',
                'format' => 'format',
                'since' => 'since',
                'before' => 'before',
                'page' => 'page',
                'idModels' => 'idModels',
                'member' => 'member',
                'memberFields' => 'member_fields',
                'memberCreator' => 'memberCreator',
                'memberCreatorFields' => 'memberCreator_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/actions',
            'method' => 'GET',
        ),
        'getMemberBoardBackgrounds' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds',
            'method' => 'GET',
        ),
        'getMemberSingleBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardBackground' => 'idBoardBackground',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds/{{idBoardBackground}}',
            'method' => 'GET',
        ),
        'getMemberBoardStars' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardStars',
            'method' => 'GET',
        ),
        'getMemberSingleBoardStar' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardStar' => 'idBoardStar',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardStars/{{idBoardStar}}',
            'method' => 'GET',
        ),
        'getMemberBoads' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
                'fields' => 'fields',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsLimit' => 'actions_limit',
                'actionsFormat' => 'actions_format',
                'actionsSince' => 'actions_since',
                'actionFields' => 'action_fields',
                'memberships' => 'memberships',
                'organization' => 'organization',
                'organizationFields' => 'organization_fields',
                'lists' => 'lists',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boards',
            'method' => 'GET',
        ),
        'getBoadsMemberIsInvitedTo' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardsInvited',
            'method' => 'GET',
        ),
        'getMemberCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'actions' => 'actions',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'stickers' => 'stickers',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'checklists' => 'checklists',
                'limit' => 'limit',
                'since' => 'since',
                'before' => 'before',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/cards',
            'method' => 'GET',
        ),
        'getMemberCustomBoardBackgrounds' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds',
            'method' => 'GET',
        ),
        'getMemberCustomBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardBackground' => 'idBoardBackground',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds/{{idBoardBackground}}',
            'method' => 'GET',
        ),
        'getMemberCustomEmoji' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customEmoji',
            'method' => 'GET',
        ),
        'getMemberSingleCustomEmoji' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idCustomEmoji' => 'idCustomEmoji',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customEmoji/{{idCustomEmoji}}',
            'method' => 'GET',
        ),
        'getMemberCustomStickers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customStickers',
            'method' => 'GET',
        ),
        'getMemberSingleCustomSticker' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idCustomSticker' => 'idCustomSticker',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customStickers/{{idCustomSticker}}',
            'method' => 'GET',
        ),
        'getMemberDeltas' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'tags' => 'tags',
                'ixLastUpdate' => 'ixLastUpdate',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/deltas',
            'method' => 'GET',
        ),
        'getMemberNotifications' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'entities' => 'entities',
                'display' => 'display',
                'filter' => 'filter',
                'readFilter' => 'read_filter',
                'fields' => 'fields',
                'page' => 'page',
                'limit' => 'limit',
                'since' => 'since',
                'before' => 'before',
                'memberCreator' => 'memberCreator',
                'memberCreatorFields' => 'memberCreator_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/notifications',
            'method' => 'GET',
        ),
        'getMemberOrganizations' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
                'fields' => 'fields',
                'paidAccount' => 'paid_account',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/organizations',
            'method' => 'GET',
        ),
        'getOrganizationsMemberIsInvitedTo' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/organizationsInvited',
            'method' => 'GET',
        ),
        'getMemberSavedSearches' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/savedSearches',
            'method' => 'GET',
        ),
        'getMemberSingleSavedSearch' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idSavedSearch' => 'idSavedSearch',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/savedSearches/{{idSavedSearch}}',
            'method' => 'GET',
        ),
        'getMemberTokens' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'filter' => 'filter',
                'webhooks' => 'webhooks',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/tokens',
            'method' => 'GET',
        ),
        'updateMember' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'fullName' => 'fullName',
                'initials' => 'initials',
                'username' => 'username',
                'bio' => 'bio',
                'avatarSource' => 'avatarSource',
                'prefs/colorBlind' => 'prefs/colorBlind',
                'prefs/locale' => 'prefs/locale',
                'prefs/minutesBetweenSummaries-' => 'prefs/minutesBetweenSummaries-',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}',
            'method' => 'PUT',
        ),
        'updateMemberAvatarSource' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/avatarSource',
            'method' => 'PUT',
        ),
        'updateMemberBio' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/bio',
            'method' => 'PUT',
        ),
        'updateMemberBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardBackground' => 'idBoardBackground',
                'tile' => 'tile',
                'brightness' => 'brightness',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds/{{idBoardBackground}}',
            'method' => 'PUT',
        ),
        'updateMemberCustomBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardBackground' => 'idBoardBackground',
                'tile' => 'tile',
                'brightness' => 'brightness',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customBoardBackgrounds/{{idBoardBackground}}',
            'method' => 'PUT',
        ),
        'updateMemberFullName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/fullName',
            'method' => 'PUT',
        ),
        'updateMemberInitials' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/initials',
            'method' => 'PUT',
        ),
        'updateMemberColorBlindPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/prefs/colorBlind',
            'method' => 'PUT',
        ),
        'updateMemberLocalePrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/prefs/locale',
            'method' => 'PUT',
        ),
        'updateMemberSavedSearch' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idSavedSearch' => 'idSavedSearch',
                'name' => 'name',
                'query' => 'query',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/savedSearches/{{idSavedSearch}}',
            'method' => 'PUT',
        ),
        'updateMemberUsername' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/username',
            'method' => 'PUT',
        ),
        'createMemberAvatar' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'file' => 'file',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/avatar',
            'method' => 'POST-RAW',
            'custom' => true,
        ),
        'createMemberBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'file' => 'file',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds',
            'method' => 'POST-RAW',
            'custom' => true,
        ),
        'createMemberBoardStar' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoard' => 'idBoard',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardstars',
            'method' => 'POST',
        ),
        'createMemberCustomBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'file' => 'file',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customBoardBackgrounds',
            'method' => 'POST-RAW',
            'custom' => true,
        ),
        'createMemberCustomEmoji' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'file' => 'file',
                'name' => 'name',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customEmoji',
            'method' => 'POST-RAW',
            'custom' => true,
        ),
        'createMemberCustomSticker' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'file' => 'file',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customStickers',
            'method' => 'POST-RAW',
            'custom' => true,
        ),
        'createMemberSavedSearch' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'name' => 'name',
                'query' => 'query',
                'pos' => 'pos',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/savedSearches',
            'method' => 'POST',
        ),
        'deleteMemberBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardBackground' => 'idBoardBackground',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardBackgrounds/{{idBoardBackground}}',
            'method' => 'DELETE',
        ),
        'deleteMemberBoardStar' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardStar' => 'idBoardStar',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/boardStars/{{idBoardStar}}',
            'method' => 'DELETE',
        ),
        'deleteMemberCustomBoardBackground' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idBoardBackground' => 'idBoardBackground',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customBoardBackgrounds/{{idBoardBackground}}',
            'method' => 'DELETE',
        ),
        'deleteMemberCustomSticker' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idCustomSticker' => 'idCustomSticker',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/customStickers/{{idCustomSticker}}',
            'method' => 'DELETE',
        ),
        'deleteMemberSavedSearch' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idMemberOrUsername' => 'idMemberOrUsername',
                'idSavedSearch' => 'idSavedSearch',
            ),
            'vendorUrl' => 'https://api.trello.com/1/members/{{idMemberOrUsername}}/savedSearches/{{idSavedSearch}}',
            'method' => 'DELETE',
        ),
        'getNotification' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'display' => 'display',
                'entities' => 'entities',
                'fields' => 'fields',
                'memberCreator' => 'memberCreator',
                'memberCreatorFields' => 'memberCreator_fields',
                'board' => 'board',
                'boardFields' => 'board_fields',
                'list' => 'list',
                'card' => 'card',
                'cardFields' => 'card_fields',
                'organization' => 'organization',
                'organizationFields' => 'organization_fields',
                'member' => 'member',
                'memberFields' => 'member_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}',
            'method' => 'GET',
        ),
        'getNotificationBoard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/board',
            'method' => 'GET',
        ),
        'getNotificationCard' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/card',
            'method' => 'GET',
        ),
        'getNotificationDisplay' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/display',
            'method' => 'GET',
        ),
        'getNotificationEntities' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/entities',
            'method' => 'GET',
        ),
        'getNotificationList' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/list',
            'method' => 'GET',
        ),
        'getNotificationMember' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/member',
            'method' => 'GET',
        ),
        'getNotificationMemberCreator' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/memberCreator',
            'method' => 'GET',
        ),
        'getNotificationOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}/organization',
            'method' => 'GET',
        ),
        'updateNotification' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
                'unread' => 'unread',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/{{idNotification}}',
            'method' => 'PUT',
        ),
        'markAllNotificationsAsRead' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idNotification' => 'idNotification',
            ),
            'vendorUrl' => 'https://api.trello.com/1/notifications/all/read',
            'method' => 'POST',
        ),
        'getOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsDisplay' => 'actions_display',
                'actionsLimit' => 'actions_limit',
                'actionFields' => 'action_fields',
                'memberships' => 'memberships',
                'membershipsMember' => 'memberships_member',
                'membershipsMemberFields' => 'memberships_member_fields',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'memberActivity' => 'member_activity',
                'membersInvited' => 'membersInvited',
                'membersInvitedFields' => 'membersInvited_fields',
                'pluginData' => 'pluginData',
                'boards' => 'boards',
                'boardFields' => 'board_fields',
                'boardActions' => 'board_actions',
                'boardActionsEntities' => 'board_actions_entities',
                'boardActionsDisplay' => 'board_actions_display',
                'boardActionsFormat' => 'board_actions_format',
                'boardActionsSince' => 'board_actions_since',
                'boardActionsLimit' => 'board_actions_limit',
                'boardActionFields' => 'board_action_fields',
                'boardLists' => 'board_lists',
                'boardPluginData' => 'board_pluginData',
                'paidAccount' => 'paid_account',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}',
            'method' => 'GET',
        ),
        'getOrganizationActions' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'entities' => 'entities',
                'display' => 'display',
                'filter' => 'filter',
                'fields' => 'fields',
                'limit' => 'limit',
                'format' => 'format',
                'since' => 'since',
                'before' => 'before',
                'page' => 'page',
                'idModels' => 'idModels',
                'member' => 'member',
                'memberFields' => 'member_fields',
                'memberCreator' => 'memberCreator',
                'memberCreatorFields' => 'memberCreator_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/actions',
            'method' => 'GET',
        ),
        'getOrganizationBoards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'filter' => 'filter',
                'fields' => 'fields',
                'actions' => 'actions',
                'actionsEntities' => 'actions_entities',
                'actionsLimit' => 'actions_limit',
                'actionsFormat' => 'actions_format',
                'actionsSince' => 'actions_since',
                'actionFields' => 'action_fields',
                'memberships' => 'memberships',
                'organization' => 'organization',
                'organizationFields' => 'organization_fields',
                'lists' => 'lists',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/boards',
            'method' => 'GET',
        ),
        'getOrganizationDeltas' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'tags' => 'tags',
                'ixLastUpdate' => 'ixLastUpdate',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/deltas',
            'method' => 'GET',
        ),
        'getOrganizationMembers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'filter' => 'filter',
                'fields' => 'fields',
                'activity' => 'activity',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members',
            'method' => 'GET',
        ),
        'getOrganizationMembersCards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMember' => 'idMember',
                'actions' => 'actions',
                'attachments' => 'attachments',
                'attachmentFields' => 'attachment_fields',
                'members' => 'members',
                'memberFields' => 'member_fields',
                'checkItemStates' => 'checkItemStates',
                'checklists' => 'checklists',
                'board' => 'board',
                'boardFields' => 'board_fields',
                'list' => 'list',
                'listFields' => 'list_fields',
                'filter' => 'filter',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members/{{idMember}}/cards',
            'method' => 'GET',
        ),
        'getOrganizationMembersInvited' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'fields' => 'fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/membersInvited',
            'method' => 'GET',
        ),
        'getOrganizationsMemberships' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'filter' => 'filter',
                'member' => 'member',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/memberships',
            'method' => 'GET',
        ),
        'getOrganizationSingleMembership' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMembership' => 'idMembership',
                'member' => 'member',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/memberships/{{idMembership}}',
            'method' => 'GET',
        ),
        'updateOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'prefs/orgInviteRestrict' => 'prefs/orgInviteRestrict',
                'prefs/externalMembersDisabled' => 'prefs/externalMembersDisabled',
                'prefs/associatedDomain' => 'prefs/associatedDomain',
                'prefs/googleAppsVersion' => 'prefs/googleAppsVersion',
                'prefs/boardVisibilityRestrict/private' => 'prefs/boardVisibilityRestrict/private',
                'prefs/boardVisibilityRestrict/org' => 'prefs/boardVisibilityRestrict/org',
                'prefs/boardVisibilityRestrict/public' => 'prefs/boardVisibilityRestrict/public',
                'name' => 'name',
                'displayName' => 'displayName',
                'desc' => 'desc',
                'website' => 'website',
                'prefs/permissionLevel' => 'prefs/permissionLevel',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}',
            'method' => 'PUT',
        ),
        'updateOrganizationDesc' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/desc',
            'method' => 'PUT',
        ),
        'updateOrganizationDisplayName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/displayName',
            'method' => 'PUT',
        ),
        'updateOrganizationMembers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'email' => 'email',
                'fullName' => 'fullName',
                'type' => 'type',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members',
            'method' => 'PUT',
        ),
        'updateOrganizationSingleMember' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMember' => 'idMember',
                'type' => 'type',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members/{{idMember}}',
            'method' => 'PUT',
        ),
        'deactivateOrganizationMember' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMember' => 'idMember',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members/{{idMember}}/deactivated',
            'method' => 'PUT',
        ),
        'updateOrganizationMembership' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMembership' => 'idMembership',
                'type' => 'type',
                'memberFields' => 'member_fields',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/memberships/{{idMembership}}',
            'method' => 'PUT',
        ),
        'updateOrganizationName' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/name',
            'method' => 'PUT',
        ),
        'updateOrganizationAssociatedDomain' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/prefs/associatedDomain',
            'method' => 'PUT',
        ),
        'updateOrganizationExternalMembersPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/prefs/externalMembersDisabled',
            'method' => 'PUT',
        ),
        'updateOrganizationInviteRestrictPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/prefs/orgInviteRestrict',
            'method' => 'PUT',
        ),
        'updateOrganizationPermissionLevelPrefs' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/prefs/permissionLevel',
            'method' => 'PUT',
        ),
        'updateOrganizationWebsite' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/website',
            'method' => 'PUT',
        ),
        'createOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'name' => 'name',
                'displayName' => 'displayName',
                'desc' => 'desc',
                'website' => 'website',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations',
            'method' => 'POST',
        ),
        'createOrganizationLogo' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'file' => 'file',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/logo',
            'method' => 'POST-RAW',
            'custom' => true,
        ),
        'deleteOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}',
            'method' => 'DELETE',
        ),
        'deleteOrganizationLogo' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/logo',
            'method' => 'DELETE',
        ),
        'deleteMemberFromOrganization' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMember' => 'idMember',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members/{{idMember}}',
            'method' => 'DELETE',
        ),
        'deleteMemberFromAllOrganizationBoards' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'idMember' => 'idMember',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/members/{{idMember}}/all',
            'method' => 'DELETE',
        ),
        'deleteOrganizationAssociatedDomain' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/prefs/associatedDomain',
            'method' => 'DELETE',
        ),
        'deleteOrganizationInviteRestrict' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'idOrgOrName' => 'idOrgOrName',
                'value' => 'value',
            ),
            'vendorUrl' => 'https://api.trello.com/1/organizations/{{idOrgOrName}}/prefs/orgInviteRestrict',
            'method' => 'DELETE',
        ),
        'search' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'query' => 'query',
                'idBoards' => 'idBoards',
                'idOrganizations' => 'idOrganizations',
                'idCards' => 'idCards',
                'modelTypes' => 'modelTypes',
                'boardFields' => 'board_fields',
                'boardsLimit' => 'boards_limit',
                'cardFields' => 'card_fields',
                'cardsLimit' => 'cards_limit',
                'cardsPage' => 'cards_page',
                'cardBoard' => 'card_board',
                'cardList' => 'card_list',
                'cardMembers' => 'card_members',
                'cardStickers' => 'card_stickers',
                'cardAttachments' => 'card_attachments',
                'organizationFields' => 'organization_fields',
                'organizationsLimit' => 'organizations_limit',
                'memberFields' => 'member_fields',
                'membersLimit' => 'members_limit',
                'partial' => 'partial',
            ),
            'vendorUrl' => 'https://api.trello.com/1/search',
            'method' => 'GET',
        ),
        'searchMembers' => array (
            'dictionary' => array (
                'apiKeys' => 'apiKeys',
                'accessToken' => 'accessToken',
                'query' => 'query',
                'limit' => 'limit',
                'idBoard' => 'idBoard',
                'idOrganization' => 'idOrganization',
                'onlyOrgMembers' => 'onlyOrgMembers',
            ),
            'vendorUrl' => 'https://api.trello.com/1/search/members',
            'method' => 'GET',
        ),
    ),
);